package im.zego.zpns_reactnative_sdk.internal;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.util.Log;
import com.google.firebase.messaging.RemoteMessage;
import im.zego.zpns.entity.ZPNsMessage;
import im.zego.zpns.enums.ZPNsConstants;
import org.json.JSONObject;

public class ZPNsFCMReceiver extends BroadcastReceiver {

    private static final String TAG = "ZPNsFCM";

    @Override
    public void onReceive(Context context, Intent intent) {
        Log.i(TAG, "ZPNs Flutter FCM message received: " + intent.getExtras());

        // 处理来自 Flutter FCM 定义的业务广播（若有）
        if (intent.getExtras() == null) {
            Log.d(
                TAG,
                "broadcast received but intent contained no extras to process RemoteMessage. Operation cancelled."
            );
            return;
        }

        Log.i(TAG, "print intent extras: " + intent.getExtras());

        RemoteMessage message = new RemoteMessage(intent.getExtras());
        if (message.getNotification() != null) {
            Log.i(TAG, "this is notification, ignore");
            // TODO: pring log and report notification push
            return;
        }

        String title = "";
        String content = "";
        if (message.getNotification() != null) {
            title = message.getNotification().getTitle();
            content = message.getNotification().getBody();
        } else {
            if (message.getData().containsKey("title")) {
                title = message.getData().get("title");
            }
            if (message.getData().containsKey("content")) {
                content = message.getData().get("content");
            }
        }

        JSONObject extraObj = new JSONObject(message.getData());
        ZPNsMessage.Builder builder = ZPNsMessage
            .builder()
            .pushSource(ZPNsConstants.PushSource.FCM)
            .pushMessage(message)
            .title(title)
            .content(content)
            .extras(extraObj.toString())
            .pushType(push.enums.ZPNsType.NOTIFICATION_THROUGH);

        if (ZPNsPluginUtils.isApplicationForeground(context)) {
            ZPNsPluginEventHandler.getInstance().onThroughForegroundMessage(context, builder.build());
        } else {
            ZPNsPluginEventHandler.getInstance().onThroughBackgroundMessage(context, builder.build());
        }
    }
}

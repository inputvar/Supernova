"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ZegoDialog;
var _react = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _prebuilt_helper = _interopRequireDefault(require("../services/prebuilt_helper"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ZegoDialog(props) {
  const {
    title = '',
    content = '',
    cancelText = 'cancel',
    okText = 'ok',
    onCancel,
    onOk
  } = props;
  const [visable, setVisable] = (0, _react.useState)(false);
  const getCustomContainerStyle = visable => _reactNative.StyleSheet.create({
    customContainer: {
      display: visable ? 'flex' : 'none'
    }
  });
  (0, _react.useEffect)(() => {
    const callbackID = 'ZegoDialog' + String(Math.floor(Math.random() * 10000));
    _prebuilt_helper.default.getInstance().onZegoDialogTrigger(callbackID, visable => {
      setVisable(visable);
    });
    return () => {
      _prebuilt_helper.default.getInstance().onZegoDialogTrigger(callbackID);
    };
  }, []);
  return /*#__PURE__*/_react.default.createElement(_reactNative.View, {
    style: [styles.container, getCustomContainerStyle(visable).customContainer]
  }, /*#__PURE__*/_react.default.createElement(_reactNative.View, {
    style: styles.mask
  }, /*#__PURE__*/_react.default.createElement(_reactNative.View, {
    style: styles.main
  }, /*#__PURE__*/_react.default.createElement(_reactNative.View, {
    style: styles.header
  }, /*#__PURE__*/_react.default.createElement(_reactNative.Text, {
    style: styles.title
  }, title)), /*#__PURE__*/_react.default.createElement(_reactNative.View, {
    style: styles.content
  }, /*#__PURE__*/_react.default.createElement(_reactNative.Text, {
    style: styles.desc
  }, content)), /*#__PURE__*/_react.default.createElement(_reactNative.View, {
    style: styles.footer
  }, /*#__PURE__*/_react.default.createElement(_reactNative.TouchableOpacity, {
    onPress: onCancel,
    style: styles.opaButton
  }, /*#__PURE__*/_react.default.createElement(_reactNative.Text, {
    style: styles.opaText
  }, cancelText)), /*#__PURE__*/_react.default.createElement(_reactNative.TouchableOpacity, {
    onPress: onOk,
    style: [styles.opaButton, {
      borderLeftWidth: 1,
      borderLeftColor: 'rgba(255, 255, 255, 0.1)'
    }]
  }, /*#__PURE__*/_react.default.createElement(_reactNative.Text, {
    style: styles.opaText
  }, okText))))));
}
const styles = _reactNative.StyleSheet.create({
  container: {
    zIndex: 13,
    width: '100%',
    height: '100%'
  },
  mask: {
    width: '100%',
    height: '100%',
    backgroundColor: 'transparent',
    alignItems: 'center',
    justifyContent: 'center'
  },
  main: {
    width: 300,
    backgroundColor: 'rgba(17, 16, 20, 0.84)',
    borderRadius: 16,
    paddingTop: 15
  },
  header: {
    paddingBottom: 14.5,
    alignItems: 'center',
    justifyContent: 'center',
    paddingLeft: 45,
    paddingRight: 45
  },
  title: {
    color: '#FFFFFF',
    fontSize: 16,
    textAlign: 'center'
  },
  content: {
    paddingBottom: 23,
    alignItems: 'center',
    justifyContent: 'center'
  },
  desc: {
    color: '#FFFFFF',
    fontSize: 14,
    textAlign: 'center',
    paddingLeft: 45,
    paddingRight: 45
  },
  footer: {
    borderTopWidth: 1,
    borderTopColor: 'rgba(255, 255, 255, 0.1)',
    flexDirection: 'row'
  },
  opaButton: {
    flex: 1,
    alignItems: 'center',
    justifyContent: 'center',
    paddingTop: 14,
    paddingBottom: 13.5
  },
  opaText: {
    color: '#FFFFFF',
    fontSize: 16
  }
});
//# sourceMappingURL=ZegoDialog.js.map
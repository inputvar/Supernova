"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ZegoMessageButton;
var _react = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _zegoUikitRn = _interopRequireDefault(require("@zegocloud/zego-uikit-rn"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ZegoMessageButton(props) {
  const {
    userID,
    hostID,
    onPress,
    width = 36,
    height = 36,
    icon = require('../resources/white_bottom_button_chat_on.png')
  } = props;
  const [isChatOn, setIsChatOn] = (0, _react.useState)(true);
  (0, _react.useEffect)(() => {
    const callbackID = 'ZegoMessageButton' + String(Math.floor(Math.random() * 10000));
    _zegoUikitRn.default.onRoomPropertyUpdated(callbackID, (key, oldValue, value) => {
      if (key === 'enableChat' && value && userID !== hostID) {
        setIsChatOn(!!parseInt(value));
      }
    });
    return () => {
      _zegoUikitRn.default.onRoomPropertyUpdated(callbackID);
    };
  }, []);
  return /*#__PURE__*/_react.default.createElement(_reactNative.TouchableOpacity, {
    style: {
      width: width,
      height: height,
      opacity: isChatOn ? 1 : 0.7
    },
    onPress: onPress,
    disabled: !isChatOn
  }, /*#__PURE__*/_react.default.createElement(_reactNative.Image, {
    resizeMode: "contain",
    source: isChatOn ? icon : require('../resources/white_bottom_button_chat_off.png'),
    onLoad: _ref => {
      let {
        nativeEvent: {
          source: {
            width,
            height
          }
        }
      } = _ref;
      return console.log('>>>>>', width, height);
    },
    style: {
      width: "100%",
      height: "100%"
    }
  }));
}
//# sourceMappingURL=ZegoMessageButton.js.map
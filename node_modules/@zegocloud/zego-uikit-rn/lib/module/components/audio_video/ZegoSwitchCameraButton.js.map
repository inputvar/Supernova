{"version":3,"names":["React","useState","useEffect","Image","TouchableOpacity","ZegoUIKitInternal","ZegoSwitchCameraButton","props","iconFrontFacingCamera","iconBackFacingCamera","useFrontFacingCamera","onPress","width","height","isFront","setIsFront","isUsingFrontFacingCamera","getImageSourceByPath","pathFront","require","pathBack","onButtonPress","callbackID","String","Math","floor","random","onSDKConnected","createElement","style","resizeMode","source"],"sources":["ZegoSwitchCameraButton.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Image, TouchableOpacity, View } from \"react-native\";\nimport ZegoUIKitInternal from \"../internal/ZegoUIKitInternal\";\n\nexport default function ZegoSwitchCameraButton(props: any) {\n    // TODO useFrontFacingCamera may cause problems when create a lot of times during connected\n    const { iconFrontFacingCamera, iconBackFacingCamera, useFrontFacingCamera = true, onPress, width = 48, height = 48 } = props;\n    const [isFront, setIsFront] = useState(ZegoUIKitInternal.isUsingFrontFacingCamera());\n    const getImageSourceByPath = () => {\n        const pathFront = iconFrontFacingCamera ? iconFrontFacingCamera : require(\"../internal/resources/white_button_flip_camera.png\");\n        const pathBack = iconBackFacingCamera ? iconFrontFacingCamera : require(\"../internal/resources/white_button_flip_camera.png\");\n        return isFront ? pathFront : pathBack\n    }\n\n    const onButtonPress = () => {\n        ZegoUIKitInternal.useFrontFacingCamera(!isFront);\n        setIsFront(!isFront);\n        if (typeof onPress == 'function') {\n            onPress();\n        }\n    }\n\n    useEffect(() => {\n        const callbackID = 'ZegoSwitchCameraButton' + String(Math.floor(Math.random() * 10000));\n        ZegoUIKitInternal.onSDKConnected(callbackID, () => {\n            ZegoUIKitInternal.useFrontFacingCamera(useFrontFacingCamera);\n            setIsFront(useFrontFacingCamera);\n        });\n        return () => {\n            ZegoUIKitInternal.onSDKConnected(callbackID);\n        }\n    }, []);\n\n    return (<TouchableOpacity\n        style={{ width: width, height: height }}\n        onPress={onButtonPress}>\n        <Image resizeMode='contain' source={getImageSourceByPath()} style={{ width: \"100%\", height: \"100%\" }} />\n    </TouchableOpacity>)\n}"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,KAAK,EAAEC,gBAAgB,QAAc,cAAc;AAC5D,OAAOC,iBAAiB,MAAM,+BAA+B;AAE7D,eAAe,SAASC,sBAAsBA,CAACC,KAAU,EAAE;EACvD;EACA,MAAM;IAAEC,qBAAqB;IAAEC,oBAAoB;IAAEC,oBAAoB,GAAG,IAAI;IAAEC,OAAO;IAAEC,KAAK,GAAG,EAAE;IAAEC,MAAM,GAAG;EAAG,CAAC,GAAGN,KAAK;EAC5H,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAACI,iBAAiB,CAACW,wBAAwB,CAAC,CAAC,CAAC;EACpF,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;IAC/B,MAAMC,SAAS,GAAGV,qBAAqB,GAAGA,qBAAqB,GAAGW,OAAO,CAAC,oDAAoD,CAAC;IAC/H,MAAMC,QAAQ,GAAGX,oBAAoB,GAAGD,qBAAqB,GAAGW,OAAO,CAAC,oDAAoD,CAAC;IAC7H,OAAOL,OAAO,GAAGI,SAAS,GAAGE,QAAQ;EACzC,CAAC;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;IACxBhB,iBAAiB,CAACK,oBAAoB,CAAC,CAACI,OAAO,CAAC;IAChDC,UAAU,CAAC,CAACD,OAAO,CAAC;IACpB,IAAI,OAAOH,OAAO,IAAI,UAAU,EAAE;MAC9BA,OAAO,CAAC,CAAC;IACb;EACJ,CAAC;EAEDT,SAAS,CAAC,MAAM;IACZ,MAAMoB,UAAU,GAAG,wBAAwB,GAAGC,MAAM,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;IACvFrB,iBAAiB,CAACsB,cAAc,CAACL,UAAU,EAAE,MAAM;MAC/CjB,iBAAiB,CAACK,oBAAoB,CAACA,oBAAoB,CAAC;MAC5DK,UAAU,CAACL,oBAAoB,CAAC;IACpC,CAAC,CAAC;IACF,OAAO,MAAM;MACTL,iBAAiB,CAACsB,cAAc,CAACL,UAAU,CAAC;IAChD,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAQtB,KAAA,CAAA4B,aAAA,CAACxB,gBAAgB;IACrByB,KAAK,EAAE;MAAEjB,KAAK,EAAEA,KAAK;MAAEC,MAAM,EAAEA;IAAO,CAAE;IACxCF,OAAO,EAAEU;EAAc,gBACvBrB,KAAA,CAAA4B,aAAA,CAACzB,KAAK;IAAC2B,UAAU,EAAC,SAAS;IAACC,MAAM,EAAEd,oBAAoB,CAAC,CAAE;IAACY,KAAK,EAAE;MAAEjB,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAO;EAAE,CAAE,CACzF,CAAC;AACvB"}
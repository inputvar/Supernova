{"version":3,"names":["ZegoExpressEngine","zlogerror","zloginfo","zlogwarning","ZegoAudioVideoResourceMode","ZegoChangedCountOrProperty","ZegoRoomPropertyUpdateType","_appInfo","appID","appSign","_isRoomConnected","_currentRoomState","_currentRoomID","_audioOutputType","_usingFrontFacingCamera","_onMicDeviceOnCallbackMap","_onCameraDeviceOnCallbackMap","_onRoomStateChangedCallbackMap","_onRequireNewTokenCallbackMap","_onUserJoinCallbackMap","_onUserLeaveCallbackMap","_onUserInfoUpdateCallbackMap","_onSoundLevelUpdateCallbackMap","_onSDKConnectedCallbackMap","_onAudioOutputDeviceTypeChangeCallbackMap","_onOnlySelfInRoomCallbackMap","_onUserCountOrPropertyChangedCallbackMap","_onAudioVideoAvailableCallbackMap","_onAudioVideoUnavailableCallbackMap","_onInRoomMessageReceivedCallbackMap","_onInRoomMessageSentCallbackMap","_onRoomPropertyUpdatedCallbackMap","_onRoomPropertiesFullUpdatedCallbackMap","_onInRoomCommandReceivedCallbackMap","_onMeRemovedFromRoomCallbackMap","_onTurnOnYourCameraRequestCallbackMap","_onTurnOnYourMicrophoneRequestCallbackMap","_onMemberListForceSortCallbackMap","_onAudioVideoListForceSortCallbackMap","_onVideoViewForceRenderCallbackMap","_localCoreUser","_createCoreUser","_streamCoreUserMap","_coreUserMap","_qualityUpdateLogCounter","_inRoomMessageList","_audioVideoResourceMode","Default","_roomProperties","_isLargeRoom","_roomMemberCount","_markAsLargeRoom","_onErrorCallbackMap","_resetData","_resetDataForLeavingRoom","userID","userName","profileUrl","extendInfo","_createPublicUser","coreUser","isMicrophoneOn","isMicDeviceOn","isCameraOn","isCameraDeviceOn","soundLevel","inRoomAttributes","avatar","viewID","viewFillMode","streamID","publisherQuality","joinTime","_isLocalUser","undefined","_setLocalUserInfo","userInfo","_onRoomUserUpdate","roomID","updateType","userList","userInfoList","length","forEach","user","_getStreamIDByUserID","Date","now","_notifyUserInfoUpdate","push","_tryStartPlayStream","_notifyUserCountOrPropertyChanged","userAdd","Object","keys","callbackID","_tryStopPlayStream","userDelete","_onRoomStreamUpdate","streamList","users","stream","cameraStateUpdate","_onRemoteCameraStateUpdate","isOn","_onAudioRouteChange","type","_onRemoteMicStateUpdate","microphoneStateUpdate","_onRoomStateChanged","reason","errorCode","extendedData","_tryStartPublishStream","_notifyMeRemovedFromRoom","_onInRoomMessageReceived","messageList","messages","msg","message","messageID","sendTime","sender","fromUser","_onRequireNewToken","token","instance","renewToken","then","catch","error","_onRoomExtraInfoUpdate","roomExtraInfoList","updateKeys","oldRoomProperties","JSON","parse","stringify","_ref","key","updateTime","updateUser","value","roomProperties","propertyKey","_notifyRoomPropertyUpdate","remote","_notifyRoomPropertiesFullUpdate","_onIMCustomCommandReceived","command","commandObj","removeUserIDList","zego_remove_user","turnCameraOnUserID","zego_turn_camera_on","turnCameraOffUserID","zego_turn_camera_off","turnMicrophoneOnUserID","zego_turn_microphone_on","turnMicrophoneOffUserID","zego_turn_microphone_off","find","removeUserID","_leaveRoom","_turnCameraDeviceOn","_turnMicDeviceOn","console","_sendInRoomCommand","toUserList","Promise","reject","resolve","sendCustomCommand","_ref2","logoutRoom","stopSoundLevelMonitor","on","muteMicrophone","extraInfo","setStreamExtraInfo","_tryStopPublishStream","isLargeRoom","enableCamera","_registerEngineCallback","quality","split","state","_getUserIDByStreamID","soundLevels","_notifySoundLevelUpdate","audioRoute","remainTimeInSecond","_unregisterEngineCallback","off","values","sort","user1","user2","map","_getPublishStreamID","startPublishingStream","startPreview","reactTag","viewMode","fillMode","backgroundColor","force","arguments","stopPublishingStream","stopPreview","startPlayingStream","resourceMode","stopPlayingStream","oldValue","_isEngineCreated","isRoomConnected","setAudioVideoResourceMode","audioVideoResourceMode","updateRenderingProperty","onUserInfoUpdate","callback","onSoundLevelUpdate","onSDKConnected","connectSDK","setEngineConfig","advancedConfig","notify_remote_device_unknown_status","notify_remote_device_init_status","engineProfile","scenario","createEngineWithProfile","engine","disconnectSDK","destroyEngine","finally","useFrontFacingCamera","isFrontFacing","useFrontCamera","isUsingFrontFacingCamera","enableSpeaker","enable","muteSpeaker","audioOutputDeviceType","turnMicDeviceOn","turnCameraDeviceOn","onMicDeviceOn","onCameraDeviceOn","setAudioOutputToSpeaker","isSpeaker","setAudioRouteToSpeaker","onAudioOutputDeviceTypeChange","setAudioConfig","config","setVideoConfig","onAudioVideoAvailable","onAudioVideoUnavailable","startPlayingAllAudioVideo","muteAllPlayStreamAudio","muteAllPlayStreamVideo","stopPlayingAllAudioVideo","onTurnOnYourCameraRequest","onTurnOnYourMicrophoneRequest","joinRoom","markAsLargeRoom","isUserStatusNotify","loginRoom","startSoundLevelMonitor","leaveRoom","onRoomStateChanged","onRequireNewToken","setRoomProperty","setRoomExtraInfo","_ref3","set","code","updateRoomProperties","newRoomProperties","_ref4","updateKey","update","getRoomProperties","onRoomPropertyUpdated","onRoomPropertiesFullUpdated","sendInRoomCommand","toUserIDs","onInRoomCommandReceived","onMeRemovedFromRoom","connectUser","disconnectUser","getLocalUserInfo","getUser","getAllUsers","a","b","publicUsers","onUserJoin","onUserLeave","onOnlySelfInRoom","onUserCountOrPropertyChanged","removeUserFromRoom","userIDs","getInRoomMessages","sendInRoomMessage","sendBroadcastMessage","result","inRoomMessage","onInRoomMessageReceived","onInRoomMessageSent","notifyUserCountOrPropertyChanged","notifyUserInfoUpdate","forceSortMemberList","onMemberListForceSort","forceSortAudioVideoList","onAudioVideoListForceSort","forceRenderVideoView","onVideoViewForceRender","onError","notifyErrorUpdate","method"],"sources":["ZegoUIKitInternal.ts"],"sourcesContent":["import ZegoExpressEngine, {\n  ZegoRoomStateChangedReason,\n  ZegoAudioRoute,\n  ZegoUser,\n  ZegoEngineProfile,\n  ZegoRoomConfig,\n} from 'zego-express-engine-reactnative';\nimport { zlogerror, zloginfo, zlogwarning } from '../../utils/logger';\nimport { ZegoAudioVideoResourceMode, ZegoChangedCountOrProperty, ZegoRoomPropertyUpdateType } from './defines'\n\nvar _appInfo = {\n  appID: 0,\n  appSign: '',\n};\nvar _isRoomConnected = false;\nvar _currentRoomState = 7; // Logout\nvar _currentRoomID = '';\nvar _audioOutputType = 0;\nvar _usingFrontFacingCamera = true;\n\nvar _onMicDeviceOnCallbackMap: any = {};\nvar _onCameraDeviceOnCallbackMap: any = {};\nvar _onRoomStateChangedCallbackMap: any = {};\nvar _onRequireNewTokenCallbackMap: any = {};\nvar _onUserJoinCallbackMap: any = {};\nvar _onUserLeaveCallbackMap: any = {};\nvar _onUserInfoUpdateCallbackMap: any = {};\nvar _onSoundLevelUpdateCallbackMap: any = {};\nvar _onSDKConnectedCallbackMap: any = {};\nvar _onAudioOutputDeviceTypeChangeCallbackMap: any = {};\nvar _onOnlySelfInRoomCallbackMap: any = {};\nvar _onUserCountOrPropertyChangedCallbackMap: any = {};\nvar _onAudioVideoAvailableCallbackMap: any = {};\nvar _onAudioVideoUnavailableCallbackMap: any = {};\nvar _onInRoomMessageReceivedCallbackMap: any = {};\nvar _onInRoomMessageSentCallbackMap: any = {};\nvar _onRoomPropertyUpdatedCallbackMap: any = {};\nvar _onRoomPropertiesFullUpdatedCallbackMap: any = {};\nvar _onInRoomCommandReceivedCallbackMap: any = {};\nvar _onMeRemovedFromRoomCallbackMap: any = {};\nvar _onTurnOnYourCameraRequestCallbackMap: any = {};\nvar _onTurnOnYourMicrophoneRequestCallbackMap: any = {};\n\n// Force update component callback\nvar _onMemberListForceSortCallbackMap: any = {};\nvar _onAudioVideoListForceSortCallbackMap: any = {};\nvar _onVideoViewForceRenderCallbackMap: any = {};\n\nvar _localCoreUser: any = _createCoreUser('', '', '', {});\nvar _streamCoreUserMap: any = {}; // <streamID, CoreUser>\nvar _coreUserMap: any = {}; // <userID, CoreUser>\nvar _qualityUpdateLogCounter = 0;\n\nvar _inRoomMessageList: any[] = [];\nvar _audioVideoResourceMode = ZegoAudioVideoResourceMode.Default;\nvar _roomProperties: any = {};\nvar _isLargeRoom = false;\nvar _roomMemberCount = 0;\nvar _markAsLargeRoom = false;\n\nvar _onErrorCallbackMap: any = {};\n\nfunction _resetData() {\n  zloginfo('Reset all data.');\n  _appInfo = { appID: 0, appSign: '' };\n  _localCoreUser = _createCoreUser('', '', '', {});\n  _streamCoreUserMap = {};\n  _coreUserMap = {};\n  _currentRoomID = '';\n  _currentRoomState = 7;\n  _isRoomConnected = false;\n  _audioOutputType = 0;\n  _inRoomMessageList = [];\n  _audioVideoResourceMode = ZegoAudioVideoResourceMode.Default;\n  _isLargeRoom = false;\n  _roomMemberCount = 0;\n  _markAsLargeRoom = false;\n}\n\nfunction _resetDataForLeavingRoom() {\n  zloginfo('Reset data for leaving room.');\n  _streamCoreUserMap = {};\n  _coreUserMap = {};\n  _currentRoomID = '';\n  _currentRoomState = 7;\n  _isRoomConnected = false;\n  const { userID, userName, profileUrl, extendInfo } = _localCoreUser;\n  _localCoreUser = _createCoreUser(userID, userName, profileUrl, extendInfo);\n  _coreUserMap[_localCoreUser.userID] = _localCoreUser;\n  _inRoomMessageList = [];\n  _roomProperties = {};\n  _isLargeRoom = false;\n  _roomMemberCount = 0;\n  _markAsLargeRoom = false;\n}\n\nfunction _createPublicUser(coreUser: any) {\n  return {\n    userID: coreUser.userID,\n    userName: coreUser.userName,\n    extendInfo: coreUser.extendInfo,\n    isMicrophoneOn: coreUser.isMicDeviceOn,\n    isCameraOn: coreUser.isCameraDeviceOn,\n    soundLevel: coreUser.soundLevel,\n    inRoomAttributes: coreUser.inRoomAttributes,\n    avatar: coreUser.avatar,\n  };\n}\nfunction _createCoreUser(userID: string, userName: string, profileUrl?: string, extendInfo?: any) {\n  return {\n    userID: userID,\n    userName: userName,\n    profileUrl: profileUrl,\n    extendInfo: extendInfo,\n    viewID: -1,\n    viewFillMode: 1,\n    streamID: '',\n    isMicDeviceOn: false,\n    isCameraDeviceOn: false,\n    publisherQuality: 0,\n    soundLevel: 0,\n    joinTime: 0,\n    inRoomAttributes: {},\n    avatar: '',\n  };\n}\nfunction _isLocalUser(userID: string) {\n  return (\n    userID === undefined || userID === '' || _localCoreUser.userID === userID\n  );\n}\nfunction _setLocalUserInfo(userInfo: any) {\n  _localCoreUser = _createCoreUser(\n    userInfo.userID,\n    userInfo.userName,\n    userInfo.profileUrl,\n    userInfo.extendInfo\n  );\n  _coreUserMap[userInfo.userID] = _localCoreUser;\n}\n\nfunction _onRoomUserUpdate(roomID: string, updateType: number, userList: any[]) {\n  // No need for roomID, does not support multi-room right now.\n  const userInfoList: any[] = [];\n  if (updateType == 0) {\n    _roomMemberCount += userList.length;\n    if (_roomMemberCount >= 500) {\n      _isLargeRoom = true;\n    }\n    userList.forEach((user) => {\n      if (!(user.userID in _coreUserMap)) {\n        const coreUser = _createCoreUser(user.userID, user.userName);\n        _coreUserMap[user.userID] = coreUser;\n      }\n      const streamID = _getStreamIDByUserID(user.userID);\n      if (streamID in _streamCoreUserMap) {\n        _coreUserMap[user.userID].streamID = streamID;\n      }\n      _coreUserMap[user.userID].joinTime = Date.now();\n      _notifyUserInfoUpdate(_coreUserMap[user.userID]);\n\n      userInfoList.push(_createPublicUser(_coreUserMap[user.userID]));\n\n      // Start after user insert into list\n      _tryStartPlayStream(user.userID);\n    });\n    _notifyUserCountOrPropertyChanged(ZegoChangedCountOrProperty.userAdd);\n\n    zloginfo('User Join: ', userInfoList);\n    Object.keys(_onUserJoinCallbackMap).forEach((callbackID) => {\n      if (_onUserJoinCallbackMap[callbackID]) {\n        _onUserJoinCallbackMap[callbackID](userInfoList);\n      }\n    });\n  } else {\n    _roomMemberCount -= userList.length;\n    userList.forEach((user) => {\n      if (user.userID in _coreUserMap) {\n        const coreUser = _coreUserMap[user.userID];\n        const userInfo = {\n          userID: coreUser.userID,\n          userName: coreUser.userName,\n          profileUrl: coreUser.profileUrl,\n          extendInfo: coreUser.extendInfo,\n        };\n        userInfoList.push(userInfo);\n\n        // Stop play stream before remove user list\n        _tryStopPlayStream(coreUser.userID, true);\n        delete _coreUserMap[user.userID];\n      }\n    });\n    _notifyUserCountOrPropertyChanged(ZegoChangedCountOrProperty.userDelete);\n    zloginfo('User Leave: ', userInfoList);\n    Object.keys(_onUserLeaveCallbackMap).forEach((callbackID) => {\n      if (_onUserLeaveCallbackMap[callbackID]) {\n        _onUserLeaveCallbackMap[callbackID](userInfoList);\n      }\n    });\n    if (Object.keys(_coreUserMap).length <= 1) {\n      Object.keys(_onOnlySelfInRoomCallbackMap).forEach((callbackID) => {\n        if (_onOnlySelfInRoomCallbackMap[callbackID]) {\n          _onOnlySelfInRoomCallbackMap[callbackID]();\n        }\n      });\n    }\n  }\n}\nfunction _onRoomStreamUpdate(roomID: string, updateType: number, streamList: any[]) {\n  zloginfo('_onRoomStreamUpdate: ', roomID, updateType, streamList);\n  var users: any[] = [];\n  if (updateType == 0) {\n    // Add\n    streamList.forEach((stream) => {\n      const userID = stream.user.userID;\n      const userName = stream.user.userName;\n      const streamID = stream.streamID;\n      if (userID in _coreUserMap) {\n        _coreUserMap[userID].streamID = streamID;\n        _streamCoreUserMap[streamID] = _coreUserMap[userID];\n        _notifyUserInfoUpdate(_coreUserMap[userID]);\n        _tryStartPlayStream(userID);\n\n        users.push(_coreUserMap[userID]);\n      } else {\n        _streamCoreUserMap[streamID] = _createCoreUser(\n          userID,\n          userName,\n          '',\n          {}\n        );\n        _streamCoreUserMap[streamID].streamID = streamID;\n\n        _coreUserMap[userID] = _streamCoreUserMap[streamID];\n\n        users.push(_streamCoreUserMap[streamID]);\n      }\n    });\n\n    Object.keys(_onAudioVideoAvailableCallbackMap).forEach((callbackID) => {\n      if (_onAudioVideoAvailableCallbackMap[callbackID]) {\n        _onAudioVideoAvailableCallbackMap[callbackID](users);\n      }\n    });\n  } else {\n    streamList.forEach((stream) => {\n      const userID = stream.user.userID;\n      const streamID = stream.streamID;\n      if (userID in _coreUserMap) {\n        _tryStopPlayStream(userID, true);\n        _coreUserMap[userID].isCameraDeviceOn = false;\n        _coreUserMap[userID].isMicDeviceOn = false;\n        _coreUserMap[userID].streamID = '';\n        _notifyUserInfoUpdate(_coreUserMap[userID]);\n\n        users.push(_coreUserMap[userID]);\n\n        delete _streamCoreUserMap[streamID];\n      }\n    });\n    _notifyUserCountOrPropertyChanged(\n      ZegoChangedCountOrProperty.cameraStateUpdate\n    );\n\n    Object.keys(_onAudioVideoUnavailableCallbackMap).forEach((callbackID) => {\n      if (_onAudioVideoUnavailableCallbackMap[callbackID]) {\n        _onAudioVideoUnavailableCallbackMap[callbackID](users);\n      }\n    });\n  }\n}\nfunction _onRemoteCameraStateUpdate(userID: string, isOn: boolean) {\n  if (userID in _coreUserMap) {\n    _coreUserMap[userID].isCameraDeviceOn = isOn;\n    _notifyUserInfoUpdate(_coreUserMap[userID]);\n    _notifyUserCountOrPropertyChanged(\n      ZegoChangedCountOrProperty.cameraStateUpdate\n    );\n\n    Object.keys(_onCameraDeviceOnCallbackMap).forEach((callbackID) => {\n      if (_onCameraDeviceOnCallbackMap[callbackID]) {\n        _onCameraDeviceOnCallbackMap[callbackID](userID, isOn);\n      }\n    });\n\n    if (userID != _localCoreUser.userID) {\n      if (isOn) {\n        _tryStartPlayStream(userID);\n      }\n    }\n  }\n}\nfunction _onAudioRouteChange(type: ZegoAudioRoute) {\n  Object.keys(_onAudioOutputDeviceTypeChangeCallbackMap).forEach(\n    (callbackID) => {\n      if (_onAudioOutputDeviceTypeChangeCallbackMap[callbackID]) {\n        _onAudioOutputDeviceTypeChangeCallbackMap[callbackID](type);\n      }\n    }\n  );\n  _audioOutputType = type;\n}\nfunction _onRemoteMicStateUpdate(userID: string, isOn: boolean) {\n  if (userID in _coreUserMap) {\n    _coreUserMap[userID].isMicDeviceOn = isOn;\n    _notifyUserInfoUpdate(_coreUserMap[userID]);\n    _notifyUserCountOrPropertyChanged(\n      ZegoChangedCountOrProperty.microphoneStateUpdate\n    );\n\n    Object.keys(_onMicDeviceOnCallbackMap).forEach((callbackID) => {\n      if (_onMicDeviceOnCallbackMap[callbackID]) {\n        _onMicDeviceOnCallbackMap[callbackID](userID, isOn);\n      }\n    });\n\n    if (userID != _localCoreUser.userID) {\n      if (isOn) {\n        _tryStartPlayStream(userID);\n      }\n    }\n  }\n}\nfunction _onRoomStateChanged(roomID: string, reason: ZegoRoomStateChangedReason, errorCode: number, extendedData: string) {\n  zloginfo('Room state chaged: ', roomID, reason, errorCode, extendedData);\n  // Not support multi-room right now\n  if (reason == 1 || reason == 4) {\n    // Logined || Reconnected\n    _isRoomConnected = true;\n    _tryStartPublishStream();\n  } else {\n    _isRoomConnected = false;\n    if (reason == 6) {\n      // KickOut\n      _notifyMeRemovedFromRoom();\n    }\n  }\n  _currentRoomState = reason;\n\n  Object.keys(_onRoomStateChangedCallbackMap).forEach((callbackID) => {\n    // callback may remove from map during room state chaging\n    if (callbackID in _onRoomStateChangedCallbackMap) {\n      if (_onRoomStateChangedCallbackMap[callbackID]) {\n        _onRoomStateChangedCallbackMap[callbackID](\n          reason,\n          errorCode,\n          extendedData\n        );\n      }\n    }\n  });\n}\nfunction _onInRoomMessageReceived(roomID: string, messageList: any[]) {\n  zloginfo('Received in room message: ', roomID, messageList.length);\n  var messages: any[] = [];\n  messageList.forEach((msg) => {\n    const message = {\n      message: msg.message,\n      messageID: msg.messageID,\n      sendTime: msg.sendTime,\n      sender: _createPublicUser(_coreUserMap[msg.fromUser.userID]),\n    };\n    messages.push(message);\n    _inRoomMessageList.push(message);\n  });\n\n  Object.keys(_onInRoomMessageReceivedCallbackMap).forEach((callbackID) => {\n    // callback may remove from map during room state chaging\n    if (callbackID in _onInRoomMessageReceivedCallbackMap) {\n      if (_onInRoomMessageReceivedCallbackMap[callbackID]) {\n        _onInRoomMessageReceivedCallbackMap[callbackID](messages);\n      }\n    }\n  });\n}\nfunction _onRequireNewToken() {\n  Object.keys(_onRequireNewTokenCallbackMap).forEach((callbackID) => {\n    if (callbackID in _onRequireNewTokenCallbackMap) {\n      if (_onRequireNewTokenCallbackMap[callbackID]) {\n        const token = _onRequireNewTokenCallbackMap[callbackID]();\n        if (token) {\n          ZegoExpressEngine.instance()\n            .renewToken(_currentRoomID, token)\n            .then(() => {\n              zloginfo('Renew token success');\n            })\n            .catch((error) => {\n              zlogerror('Renew token failed: ', error);\n            });\n        } else {\n          zlogerror('Renew token failed: the returned token is abnormal');\n        }\n      }\n    }\n  });\n}\nfunction _onRoomExtraInfoUpdate(roomID: string, roomExtraInfoList: any[]) {\n  zloginfo('$$$$$$$$Room extra info update: ', roomID, roomExtraInfoList);\n  const updateKeys: string[]= [];\n  const oldRoomProperties = JSON.parse(JSON.stringify(_roomProperties));\n  roomExtraInfoList.forEach(({ key, updateTime, updateUser, value }) => {\n    if (key === 'extra_info') {\n      const roomProperties = JSON.parse(value);\n      Object.keys(roomProperties).forEach((propertyKey) => {\n        if (oldRoomProperties[propertyKey] !== roomProperties[propertyKey]) {\n          updateKeys.push(propertyKey);\n          _roomProperties[propertyKey] = roomProperties[propertyKey];\n          _notifyRoomPropertyUpdate(propertyKey, oldRoomProperties[propertyKey], roomProperties[propertyKey], ZegoRoomPropertyUpdateType.remote);\n        }\n      })\n    }\n  });\n  if (updateKeys.length > 0) {\n    _notifyRoomPropertiesFullUpdate(updateKeys, oldRoomProperties, JSON.parse(JSON.stringify(_roomProperties)), ZegoRoomPropertyUpdateType.remote);\n  }\n}\nfunction _onIMCustomCommandReceived(roomID: string, fromUser: ZegoUser, command: string) {\n  try {\n    const commandObj = JSON.parse(command);\n    if (commandObj && typeof commandObj === 'object') {\n      fromUser = _createPublicUser(_coreUserMap[fromUser.userID] || fromUser);\n      const removeUserIDList = commandObj.zego_remove_user;\n      const turnCameraOnUserID = commandObj.zego_turn_camera_on;\n      const turnCameraOffUserID = commandObj.zego_turn_camera_off;\n      const turnMicrophoneOnUserID = commandObj.zego_turn_microphone_on;\n      const turnMicrophoneOffUserID = commandObj.zego_turn_microphone_off;\n      if (removeUserIDList && removeUserIDList.find((removeUserID: string) => removeUserID === _localCoreUser.userID)) {\n        _notifyMeRemovedFromRoom();\n        // Leave the room automatically\n        _leaveRoom();\n      } else if (turnCameraOnUserID === _localCoreUser.userID) {\n        Object.keys(_onTurnOnYourCameraRequestCallbackMap).forEach((callbackID) => {\n          if (_onTurnOnYourCameraRequestCallbackMap[callbackID]) {\n            _onTurnOnYourCameraRequestCallbackMap[callbackID](fromUser);\n          }\n        });\n      } else if (turnMicrophoneOnUserID === _localCoreUser.userID) {\n        Object.keys(_onTurnOnYourMicrophoneRequestCallbackMap).forEach((callbackID) => {\n          if (_onTurnOnYourMicrophoneRequestCallbackMap[callbackID]) {\n            _onTurnOnYourMicrophoneRequestCallbackMap[callbackID](fromUser);\n          }\n        });\n      } else if (turnCameraOffUserID === _localCoreUser.userID) {\n        _turnCameraDeviceOn(_localCoreUser.userID, false);\n        // Automatic shutdown\n      } else if (turnMicrophoneOffUserID === _localCoreUser.userID) {\n        // Automatic shutdown\n        _turnMicDeviceOn(_localCoreUser.userID, false);\n      }\n    }\n  } catch (error) {\n    console.error(error);\n  }\n  zloginfo('_onIMCustomCommandReceived: ', roomID, fromUser, command);\n  Object.keys(_onInRoomCommandReceivedCallbackMap).forEach((callbackID) => {\n    if (callbackID in _onInRoomCommandReceivedCallbackMap) {\n      if (_onInRoomCommandReceivedCallbackMap[callbackID]) {\n        _onInRoomCommandReceivedCallbackMap[callbackID](fromUser, command);\n      }\n    }\n  });\n}\nfunction _sendInRoomCommand(command: string, toUserList: any[]) {\n  if (!_isRoomConnected) {\n    zlogerror('You need to join the room before using this interface!');\n    return Promise.reject();\n  }\n  return new Promise<void>((resolve, reject) => {\n    ZegoExpressEngine.instance().sendCustomCommand(_currentRoomID, command, toUserList).then(({ errorCode }) => {\n      if (errorCode === 0) {\n        zloginfo('[sendInRoomCommand]Send successfully', toUserList);\n        resolve();\n      } else {\n        zloginfo('[sendInRoomCommand]Send failure', toUserList);\n        reject();\n      }\n    }).catch((error) => {\n      zloginfo('[sendInRoomCommand]Send error', error);\n      reject();\n    })\n  });\n}\nfunction _leaveRoom() {\n  return new Promise<void>((resolve, reject) => {\n    if (_currentRoomID == '') {\n      zlogwarning('You are not join in any room, no need to leave room.');\n      resolve();\n    } else {\n      zloginfo('leaveRoom: ', _currentRoomID);\n      ZegoExpressEngine.instance()\n        .logoutRoom(_currentRoomID)\n        .then(() => {\n          zloginfo('Leave room succeed.');\n          ZegoExpressEngine.instance().stopSoundLevelMonitor();\n          _notifyUserCountOrPropertyChanged(\n            ZegoChangedCountOrProperty.userDelete\n          );\n          _resetDataForLeavingRoom();\n          resolve();\n        })\n        .catch((error) => {\n          zlogerror('Leave room failed: ', error);\n          reject(error);\n        });\n    }\n  });\n}\nfunction _turnMicDeviceOn(userID: string, on: boolean) {\n  return new Promise<void>((resolve, reject) => {\n    if (_isLocalUser(userID)) {\n      zloginfo('turnMicDeviceOn: ', _localCoreUser.userID, on);\n      ZegoExpressEngine.instance().muteMicrophone(!on);\n\n      _onRemoteMicStateUpdate(_localCoreUser.userID, on);\n\n      _localCoreUser.isMicDeviceOn = on;\n      _coreUserMap[_localCoreUser.userID].isMicDeviceOn = on;\n      _notifyUserInfoUpdate(_localCoreUser);\n      _notifyUserCountOrPropertyChanged(\n        ZegoChangedCountOrProperty.microphoneStateUpdate\n      );\n\n      // sync device status via stream extra info\n      var extraInfo = {\n          isCameraOn : _localCoreUser.isCameraDeviceOn,\n          isMicrophoneOn : on\n      }\n      ZegoExpressEngine.instance().setStreamExtraInfo(JSON.stringify(extraInfo))\n\n      if (on) {\n        _tryStartPublishStream();\n      } else {\n        _tryStopPublishStream();\n      }\n      resolve();\n    } else {\n      const isLargeRoom = _isLargeRoom || _markAsLargeRoom;\n      const command = on ? JSON.stringify({ zego_turn_microphone_on: userID }) : JSON.stringify({ zego_turn_microphone_off: userID });\n      const userInfo = _coreUserMap[userID];\n      const userName = userInfo ? (userInfo.userName || '') : '';\n      const toUserList = isLargeRoom ? [] : [{ userID, userName }];\n      _sendInRoomCommand(command, toUserList).then(() => {\n        zloginfo('turnMicDeviceOn others: ', userID, on);\n        resolve();\n      }).catch(() => {\n        zlogerror('turnMicDeviceOn others error: ', userID, on);\n        reject();\n      });\n    }\n  });\n}\nfunction _turnCameraDeviceOn(userID: string, on: boolean) {\n  return new Promise<void>((resolve, reject) => {\n    if (_isLocalUser(userID)) {\n      // Default to Main Channel\n      zloginfo('turnCameraDeviceOn: ', _localCoreUser.userID, on);\n      ZegoExpressEngine.instance().enableCamera(on, 0);\n\n      _onRemoteCameraStateUpdate(_localCoreUser.userID, on);\n\n      _localCoreUser.isCameraDeviceOn = on;\n      // if (!on) {\n      //     _localCoreUser.viewID = -1;\n      // }\n      _coreUserMap[_localCoreUser.userID] = _localCoreUser;\n      _notifyUserInfoUpdate(_localCoreUser);\n      _notifyUserCountOrPropertyChanged(\n        ZegoChangedCountOrProperty.cameraStateUpdate\n      );\n\n      // sync device status via stream extra info\n      var extraInfo = {\n          isCameraOn : on,\n          isMicrophoneOn : _localCoreUser.isMicDeviceOn\n      }\n      ZegoExpressEngine.instance().setStreamExtraInfo(JSON.stringify(extraInfo))\n\n      if (on) {\n        _tryStartPublishStream();\n      } else {\n        _tryStopPublishStream();\n      }\n      resolve();\n    } else {\n      const isLargeRoom = _isLargeRoom || _markAsLargeRoom;\n      const command = on ? JSON.stringify({ zego_turn_camera_on: userID }) : JSON.stringify({ zego_turn_camera_off: userID });\n      const userInfo = _coreUserMap[userID];\n      const userName = userInfo ? (userInfo.userName || '') : '';\n      const toUserList = isLargeRoom ? [] : [{ userID, userName }];\n      _sendInRoomCommand(command, toUserList).then(() => {\n        zloginfo('turnCameraDeviceOn others: ', userID, on);\n        resolve();\n      }).catch(() => {\n        zlogerror('turnCameraDeviceOn others error: ', userID, on);\n        reject();\n      });\n    }\n  });\n}\nfunction _registerEngineCallback() {\n  zloginfo('Register callback for ZegoExpressEngine...');\n  ZegoExpressEngine.instance().on(\n    'roomUserUpdate',\n    (roomID, updateType, userList) => {\n      zloginfo('[roomUserUpdate callback]', roomID, updateType, userList);\n      _onRoomUserUpdate(roomID, updateType, userList);\n    }\n  );\n  ZegoExpressEngine.instance().on(\n    'roomStreamUpdate',\n    (roomID, updateType, streamList) => {\n      zloginfo('[roomStreamUpdate callback]', roomID, updateType, streamList);\n      _onRoomStreamUpdate(roomID, updateType, streamList);\n    }\n  );\n  ZegoExpressEngine.instance().on(\n    'publisherQualityUpdate',\n    (streamID, quality) => {\n      if (_qualityUpdateLogCounter % 10 == 0) {\n        _qualityUpdateLogCounter = 0;\n        zloginfo('[publisherQualityUpdate callback]', streamID, quality);\n      }\n      _qualityUpdateLogCounter++;\n      if (streamID.split('_')[2] === 'main') {\n        _localCoreUser.publisherQuality = quality;\n        _coreUserMap[_localCoreUser.userID].publisherQuality = quality;\n        _notifyUserInfoUpdate(_coreUserMap[_localCoreUser.userID]);\n      }\n    }\n  );\n  // ZegoExpressEngine.instance().on(\n  //     'publisherStateUpdate',\n  //     (streamID, state, errorCode, extendedData) => {\n  //         zloginfo('publisherStateUpdate#################', streamID, state, errorCode)\n  //     },\n  // );\n  ZegoExpressEngine.instance().on(\n    'playerQualityUpdate',\n    (streamID, quality) => {\n      if (_qualityUpdateLogCounter % 10 == 0) {\n        // zloginfo('[playerQualityUpdate callback]', streamID, quality);\n      }\n      // TODO\n    }\n  );\n  ZegoExpressEngine.instance().on(\n    'remoteCameraStateUpdate',\n    (streamID, state) => {\n      zloginfo('[remoteCameraStateUpdate callback]', streamID, state);\n      // 0 for device is on\n      _onRemoteCameraStateUpdate(_getUserIDByStreamID(streamID), state == 0);\n    }\n  );\n  ZegoExpressEngine.instance().on('remoteMicStateUpdate', (streamID, state) => {\n    zloginfo('[remoteMicStateUpdate callback]', streamID, state);\n    // 0 for device is on\n    _onRemoteMicStateUpdate(_getUserIDByStreamID(streamID), state == 0);\n  });\n  ZegoExpressEngine.instance().on(\n    'playerStateUpdate',\n    (streamID, state, errorCode, extendedData) => {\n      zloginfo(\n        '[playerStateUpdate callback]',\n        streamID,\n        state,\n        errorCode,\n        extendedData\n      );\n    }\n  );\n  ZegoExpressEngine.instance().on('remoteSoundLevelUpdate', (soundLevels: any) => {\n    // {streamID, soundLavel} value from 0.0 to 100.0\n    // zloginfo('[remoteSoundLevelUpdate callback]', soundLevels);\n    Object.keys(soundLevels).forEach((streamID) => {\n      const userID = _getUserIDByStreamID(streamID);\n      if (userID in _coreUserMap) {\n        _coreUserMap[userID].soundLevel = soundLevels[streamID];\n        _notifySoundLevelUpdate(userID, soundLevels[streamID]);\n      }\n    });\n  });\n  ZegoExpressEngine.instance().on('capturedSoundLevelUpdate', (soundLevel) => {\n    if (\n      _localCoreUser.userID === '' ||\n      !(_localCoreUser.userID in _coreUserMap)\n    ) {\n      return;\n    }\n    _localCoreUser.soundLevel = soundLevel;\n    _coreUserMap[_localCoreUser.userID].soundLevel = soundLevel;\n    _notifySoundLevelUpdate(_localCoreUser.userID, soundLevel);\n    // zloginfo('capturedSoundLevelUpdate', soundLevel)\n  });\n  // https://doc-en-api.zego.im/ReactNative/enums/_zegoexpressdefines_.zegoroomstatechangedreason.html\n  ZegoExpressEngine.instance().on(\n    'roomStateChanged',\n    (roomID, reason, errorCode, extendedData) => {\n      zloginfo(\n        '[roomStateChanged callback]',\n        roomID,\n        reason,\n        errorCode,\n        extendedData\n      );\n      _onRoomStateChanged(roomID, reason, errorCode, extendedData);\n    }\n  );\n  ZegoExpressEngine.instance().on('audioRouteChange', (audioRoute) => {\n    zloginfo('[audioRouteChange callback]', audioRoute);\n    _onAudioRouteChange(audioRoute);\n  });\n  ZegoExpressEngine.instance().on(\n    'IMRecvBroadcastMessage',\n    (roomID, messageList) => {\n      _onInRoomMessageReceived(roomID, messageList);\n    }\n  );\n  ZegoExpressEngine.instance().on(\n    'roomTokenWillExpire',\n    (roomID, remainTimeInSecond) => {\n      _onRequireNewToken();\n    }\n  );\n  ZegoExpressEngine.instance().on('roomExtraInfoUpdate', (roomID, roomExtraInfoList) => {\n    _onRoomExtraInfoUpdate(roomID, roomExtraInfoList);\n  });\n  ZegoExpressEngine.instance().on('roomStreamExtraInfoUpdate', (roomID, streamList) => {\n    zloginfo('roomStreamExtraInfoUpdate', streamList)\n    streamList.forEach((stream) => {\n        try {\n            var extraInfo = JSON.parse(stream.extraInfo)\n            if ('isCameraOn' in extraInfo) {\n                _onRemoteCameraStateUpdate(stream.user.userID, extraInfo.isCameraOn)\n            }\n            if ('isMicrophoneOn' in extraInfo) {\n                _onRemoteMicStateUpdate(stream.user.userID, extraInfo.isMicrophoneOn)\n            }\n        } catch (error) {\n            zlogerror('roomStreamExtraInfoUpdate ERROR: ', error)\n        }\n    })\n  });\n  ZegoExpressEngine.instance().on('IMRecvCustomCommand', (roomID, fromUser, command) => {\n    zloginfo('IMRecvCustomCommand', roomID, fromUser, command);\n    _onIMCustomCommandReceived(roomID, fromUser, command);\n  });\n}\nfunction _unregisterEngineCallback() {\n  zloginfo('Unregister callback from ZegoExpressEngine...');\n  ZegoExpressEngine.instance().off('roomUserUpdate', undefined);\n  ZegoExpressEngine.instance().off('roomStreamUpdate', undefined);\n  ZegoExpressEngine.instance().off('publisherQualityUpdate', undefined);\n  ZegoExpressEngine.instance().off('playerQualityUpdate', undefined);\n  ZegoExpressEngine.instance().off('remoteCameraStateUpdate', undefined);\n  ZegoExpressEngine.instance().off('remoteMicStateUpdate', undefined);\n  ZegoExpressEngine.instance().off('playerStateUpdate', undefined);\n  ZegoExpressEngine.instance().off('remoteSoundLevelUpdate', undefined);\n  ZegoExpressEngine.instance().off('capturedSoundLevelUpdate', undefined);\n  ZegoExpressEngine.instance().off('roomStateChanged', undefined);\n  ZegoExpressEngine.instance().off('audioRouteChange', undefined);\n  ZegoExpressEngine.instance().off('IMRecvBroadcastMessage', undefined);\n  ZegoExpressEngine.instance().off('roomExtraInfoUpdate', undefined);\n  ZegoExpressEngine.instance().off('roomStreamExtraInfoUpdate', undefined);\n  ZegoExpressEngine.instance().off('IMRecvCustomCommand', undefined);\n}\nfunction _notifyUserCountOrPropertyChanged(type: number) {\n  const msg = [\n    '',\n    'user add',\n    'user delete',\n    'mic update',\n    'camera update',\n    'attributes update',\n  ];\n  const userList = Object.values(_coreUserMap)\n    .sort((user1: any, user2: any) => {\n      return user2.joinTime - user1.joinTime;\n    })\n    .map((user) => _createPublicUser(user));\n  zloginfo(`_notifyUserCountOrPropertyChanged ${msg[type]}`, userList);\n  Object.keys(_onUserCountOrPropertyChangedCallbackMap).forEach(\n    (callbackID) => {\n      if (_onUserCountOrPropertyChangedCallbackMap[callbackID]) {\n        _onUserCountOrPropertyChangedCallbackMap[callbackID](\n          JSON.parse(JSON.stringify(userList))\n        );\n      }\n    }\n  );\n}\n\n// >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Stream Handling <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nfunction _getUserIDByStreamID(streamID: string) {\n  // StreamID format: roomid_userid_main\n  for (const userID in _coreUserMap) {\n    if (_coreUserMap[userID].streamID == streamID) {\n      return userID;\n    }\n  }\n  return '';\n}\nfunction _getPublishStreamID() {\n  return _currentRoomID + '_' + _localCoreUser.userID + '_main';\n}\nfunction _getStreamIDByUserID(userID: string) {\n  return _currentRoomID + '_' + userID + '_main';\n}\nfunction _tryStartPublishStream() {\n  if (_localCoreUser.isMicDeviceOn || _localCoreUser.isCameraDeviceOn) {\n    zloginfo(\n      '_tryStartPublishStream',\n      _localCoreUser.isMicDeviceOn,\n      _localCoreUser.isCameraDeviceOn,\n      _localCoreUser.streamID\n    );\n    if (!_localCoreUser.streamID) {\n      return;\n    }\n    ZegoExpressEngine.instance()\n      .startPublishingStream(_localCoreUser.streamID)\n      .then(() => {\n        zloginfo('Notify local user audioVideoAvailable start', _localCoreUser.streamID + '', JSON.parse(JSON.stringify(_streamCoreUserMap)));\n        // if (_localCoreUser.streamID in _streamCoreUserMap) {\n          _streamCoreUserMap[_localCoreUser.streamID] = _localCoreUser;\n\n          zloginfo('Notify local user audioVideoAvailable end', _localCoreUser);\n          Object.keys(_onAudioVideoAvailableCallbackMap).forEach(\n            (callbackID) => {\n              if (_onAudioVideoAvailableCallbackMap[callbackID]) {\n                _onAudioVideoAvailableCallbackMap[callbackID]([_localCoreUser]);\n              }\n            }\n          );\n        // }\n      });\n    zloginfo('ZegoExpressEngine startPreview:', _localCoreUser);\n    if (_localCoreUser.viewID > 0) {\n      ZegoExpressEngine.instance()\n        .startPreview({\n          reactTag: _localCoreUser.viewID,\n          viewMode: _localCoreUser.fillMode,\n          backgroundColor: 0,\n        })\n        .catch((error) => {\n          zlogerror(error);\n        });\n    }\n  }\n}\nfunction _tryStopPublishStream(force = false) {\n  if (!_localCoreUser.isMicDeviceOn && !_localCoreUser.isCameraDeviceOn) {\n    zloginfo('stopPublishStream');\n    ZegoExpressEngine.instance().stopPublishingStream();\n    ZegoExpressEngine.instance().stopPreview();\n    if (_localCoreUser.streamID in _streamCoreUserMap) {\n      delete _streamCoreUserMap[_localCoreUser.streamID];\n\n      Object.keys(_onAudioVideoUnavailableCallbackMap).forEach((callbackID) => {\n        if (_onAudioVideoUnavailableCallbackMap[callbackID]) {\n          _onAudioVideoUnavailableCallbackMap[callbackID]([_localCoreUser]);\n        }\n      });\n    }\n  }\n}\nfunction _tryStartPlayStream(userID: string) {\n  if (userID in _coreUserMap) {\n    const user = _coreUserMap[userID];\n    zloginfo(\n      '########_tryStartPlayStream##############: ',\n      user,\n      user.fillMode,\n      _audioVideoResourceMode,\n    );\n    if (user.streamID !== '') {\n      if (user.viewID > 0) {\n        ZegoExpressEngine.instance().startPlayingStream(user.streamID, {\n          reactTag: user.viewID,\n          viewMode: user.fillMode,\n          backgroundColor: 0,\n        }, {\n          resourceMode: _audioVideoResourceMode,\n        });\n      } else {\n        ZegoExpressEngine.instance().startPlayingStream(user.streamID, undefined, {\n          resourceMode: _audioVideoResourceMode,\n        });\n      }\n    }\n  }\n}\nfunction _tryStopPlayStream(userID: string, force = false) {\n  if (userID in _coreUserMap) {\n    const user = _coreUserMap[userID];\n    if (force || (!user.isMicDeviceOn && !user.isCameraDeviceOn)) {\n      ZegoExpressEngine.instance().stopPlayingStream(user.streamID);\n    }\n  }\n}\nfunction _notifyUserInfoUpdate(userInfo: any) {\n  Object.keys(_onUserInfoUpdateCallbackMap).forEach((callbackID) => {\n    if (_onUserInfoUpdateCallbackMap[callbackID]) {\n      _onUserInfoUpdateCallbackMap[callbackID](userInfo);\n    }\n  });\n}\nfunction _notifySoundLevelUpdate(userID: string, soundLevel: number) {\n  Object.keys(_onSoundLevelUpdateCallbackMap).forEach((callbackID) => {\n    if (_onSoundLevelUpdateCallbackMap[callbackID]) {\n      _onSoundLevelUpdateCallbackMap[callbackID](userID, soundLevel);\n    }\n  });\n}\nfunction _notifyRoomPropertyUpdate(key: string, oldValue: any, value: any, type: number) {\n  Object.keys(_onRoomPropertyUpdatedCallbackMap).forEach((callbackID) => {\n    if (_onRoomPropertyUpdatedCallbackMap[callbackID]) {\n      _onRoomPropertyUpdatedCallbackMap[callbackID](key, oldValue, value, type);\n    }\n  });\n}\nfunction _notifyRoomPropertiesFullUpdate(keys: string[], oldRoomProperties: any, roomProperties: any, type: number) {\n  Object.keys(_onRoomPropertiesFullUpdatedCallbackMap).forEach((callbackID) => {\n    if (_onRoomPropertiesFullUpdatedCallbackMap[callbackID]) {\n      _onRoomPropertiesFullUpdatedCallbackMap[callbackID](keys, oldRoomProperties, roomProperties, type);\n    }\n  });\n}\nfunction _notifyMeRemovedFromRoom() {\n  Object.keys(_onMeRemovedFromRoomCallbackMap).forEach((callbackID) => {\n    if (_onMeRemovedFromRoomCallbackMap[callbackID]) {\n      _onMeRemovedFromRoomCallbackMap[callbackID]();\n    }\n  });\n}\nconst _isEngineCreated = () => {\n  try {\n    return ZegoExpressEngine.instance() != undefined;\n  } catch (error) {\n    return false;\n  }\n}\n\nexport default {\n  // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Internal <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n  isRoomConnected() {\n    return _isRoomConnected;\n  },\n  setAudioVideoResourceMode(audioVideoResourceMode: any) {\n    zloginfo('setAudioVideoResourceMode', audioVideoResourceMode);\n    _audioVideoResourceMode = audioVideoResourceMode || ZegoAudioVideoResourceMode.Default;\n  },\n  updateRenderingProperty(userID: string, viewID: number, fillMode: string) {\n    zloginfo(\n      'updateRenderingProperty: ',\n      userID,\n      viewID,\n      fillMode,\n      '<<<<<<<<<<<<<<<<<<<<<<<<<<'\n    );\n    if (userID === undefined) {\n      zlogwarning(\n        'updateRenderingProperty: ignore undifine useid. Use empty string for local user.'\n      );\n      return;\n    }\n    if (userID === '') {\n      userID = _localCoreUser.userID;\n    }\n    if (userID in _coreUserMap) {\n      _coreUserMap[userID].viewID = viewID;\n      _coreUserMap[userID].fillMode = fillMode;\n      _notifyUserInfoUpdate(_coreUserMap[userID]);\n\n      if (_localCoreUser.userID == userID) {\n        _localCoreUser.viewID = viewID;\n        _localCoreUser.fillMode = fillMode;\n        if (viewID > 0) {\n          _tryStartPublishStream();\n        } else {\n          _tryStopPublishStream();\n        }\n      } else {\n        // Check if stream is ready to play for remote user\n        if (viewID > 0) {\n          _tryStartPlayStream(userID);\n        }\n      }\n    }\n  },\n  onUserInfoUpdate(callbackID: string, callback?: Function) {\n    if (typeof callback !== 'function') {\n      if (callbackID in _onUserInfoUpdateCallbackMap) {\n        zloginfo(\n          '[onUserInfoUpdate] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete _onUserInfoUpdateCallbackMap[callbackID];\n      }\n    } else {\n      _onUserInfoUpdateCallbackMap[callbackID] = callback;\n    }\n  },\n  onSoundLevelUpdate(callbackID: string, callback?: Function) {\n    if (typeof callback !== 'function') {\n      if (callbackID in _onSoundLevelUpdateCallbackMap) {\n        zloginfo(\n          '[onSoundLevelUpdate] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete _onSoundLevelUpdateCallbackMap[callbackID];\n      }\n    } else {\n      _onSoundLevelUpdateCallbackMap[callbackID] = callback;\n    }\n  },\n  onSDKConnected(callbackID: string, callback?: Function) {\n    if (typeof callback !== 'function') {\n      if (callbackID in _onSDKConnectedCallbackMap) {\n        zloginfo(\n          '[onSDKConnected] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete _onSDKConnectedCallbackMap[callbackID];\n      }\n    } else {\n      _onSDKConnectedCallbackMap[callbackID] = callback;\n    }\n  },\n  // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> SDK <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n  connectSDK(appID: number, appSign: string, userInfo: any) {\n    // Solve the problem of repeated initialization\n    if (_isEngineCreated()) {\n      zloginfo('Create ZegoExpressEngine succeed already!');\n\n      \n      _unregisterEngineCallback();\n      _registerEngineCallback();\n\n      Object.keys(_onSDKConnectedCallbackMap).forEach((callbackID) => {\n        // TODO cause  WARN  Possible Unhandled Promise Rejection (id: 56)\n        if (_onSDKConnectedCallbackMap[callbackID]) {\n          _onSDKConnectedCallbackMap[callbackID]();\n        }\n      });\n\n      return Promise.resolve();\n    }\n    return new Promise<void>((resolve, reject) => {\n      // set advancedConfig to monitor remote user's device changed\n      ZegoExpressEngine.setEngineConfig({\n        advancedConfig: {\n          // @ts-ignore\n          notify_remote_device_unknown_status: 'true',\n          notify_remote_device_init_status: 'true',\n        },\n      });\n      const engineProfile: ZegoEngineProfile = {\n        appID: appID,\n        appSign: appSign,\n        scenario: 0,\n      };\n      ZegoExpressEngine.createEngineWithProfile(engineProfile)\n        .then((engine) => {\n          zloginfo('Create ZegoExpressEngine succeed!');\n          _appInfo.appID = appID;\n          _appInfo.appSign = appSign;\n          _unregisterEngineCallback();\n          _registerEngineCallback();\n\n          _setLocalUserInfo(userInfo);\n\n          Object.keys(_onSDKConnectedCallbackMap).forEach((callbackID) => {\n            // TODO cause  WARN  Possible Unhandled Promise Rejection (id: 56)\n            if (_onSDKConnectedCallbackMap[callbackID]) {\n              _onSDKConnectedCallbackMap[callbackID]();\n            }\n          });\n          resolve();\n        })\n        .catch((error) => {\n          zlogerror('Create ZegoExpressEngine Failed: ', error);\n          reject(error);\n        });\n    });\n  },\n  disconnectSDK() {\n    return new Promise<void>((resolve, reject) => {\n      if (ZegoExpressEngine.instance()) {\n        ZegoExpressEngine.destroyEngine()\n          .then(() => {\n            zloginfo('Destroy ZegoExpressEngine finished!');\n            resolve();\n          })\n          .catch((error) => {\n            zlogerror('Destroy ZegoExpressEngine failed!', error);\n            reject(error);\n          })\n          .finally(() => {\n            _resetData();\n          });\n      } else {\n        resolve();\n      }\n    });\n  },\n\n  // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Audio Video <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n  useFrontFacingCamera(isFrontFacing: boolean) {\n    zloginfo('Use front facing camera: ', isFrontFacing);\n    _usingFrontFacingCamera = isFrontFacing;\n    return ZegoExpressEngine.instance().useFrontCamera(isFrontFacing, 0);\n  },\n  isUsingFrontFacingCamera() {\n    return _usingFrontFacingCamera;\n  },\n  isMicDeviceOn(userID: string) {\n    if (!userID) {\n      return _localCoreUser.isMicDeviceOn;\n    } else if (userID in _coreUserMap) {\n      return _coreUserMap[userID].isMicDeviceOn;\n    } else {\n      zlogwarning(\n        'Can not check mic device is on for user[',\n        userID,\n        '], because no record!'\n      );\n      return true;\n    }\n  },\n  isCameraDeviceOn(userID: string) {\n    if (!userID) {\n      return _localCoreUser.isCameraDeviceOn;\n    } else if (userID in _coreUserMap) {\n      return _coreUserMap[userID].isCameraDeviceOn;\n    } else {\n      zlogwarning(\n        'No record for user: ',\n        userID,\n        '. Can not check camera device is on.'\n      );\n      return true;\n    }\n  },\n  enableSpeaker(enable: boolean) {\n    // TODO\n    return new Promise<void>((resolve, reject) => {\n      if (!_isRoomConnected) {\n        zlogerror('You are not connect to any room.');\n        reject();\n      } else {\n        ZegoExpressEngine.instance().muteSpeaker(!enable);\n        resolve();\n      }\n    });\n  },\n  audioOutputDeviceType() {\n    return _audioOutputType;\n  },\n  turnMicDeviceOn(userID: string, on: boolean) {\n    return _turnMicDeviceOn(userID, on);\n  },\n  turnCameraDeviceOn(userID: string, on: boolean) {\n    return _turnCameraDeviceOn(userID, on);\n  },\n  onMicDeviceOn(callbackID: string, callback?: Function) {\n    if (typeof callback !== 'function') {\n      if (callbackID in _onMicDeviceOnCallbackMap) {\n        zloginfo(\n          '[onMicDeviceOn] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete _onMicDeviceOnCallbackMap[callbackID];\n      }\n    } else {\n      _onMicDeviceOnCallbackMap[callbackID] = callback;\n    }\n  },\n  onCameraDeviceOn(callbackID: string, callback?: Function) {\n    if (typeof callback !== 'function') {\n      if (callbackID in _onCameraDeviceOnCallbackMap) {\n        zloginfo(\n          '[onCameraDeviceOn] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete _onCameraDeviceOnCallbackMap[callbackID];\n      }\n    } else {\n      _onCameraDeviceOnCallbackMap[callbackID] = callback;\n    }\n  },\n  setAudioOutputToSpeaker(isSpeaker: boolean) {\n    ZegoExpressEngine.instance().setAudioRouteToSpeaker(isSpeaker);\n  },\n  onAudioOutputDeviceTypeChange(callbackID: string, callback?: Function) {\n    if (typeof callback !== 'function') {\n      if (callbackID in _onAudioOutputDeviceTypeChangeCallbackMap) {\n        zloginfo(\n          '[onAudioOutputDeviceTypeChange] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete _onAudioOutputDeviceTypeChangeCallbackMap[callbackID];\n      }\n    } else {\n      _onAudioOutputDeviceTypeChangeCallbackMap[callbackID] = callback;\n    }\n  },\n  setAudioConfig(config: any) {\n    // TODO\n  },\n  setVideoConfig(config: any) {\n    // TODO\n  },\n  onAudioVideoAvailable(callbackID: string, callback?: Function) {\n    if (typeof callback !== 'function') {\n      if (callbackID in _onAudioVideoAvailableCallbackMap) {\n        zloginfo(\n          '[onAudioVideoAvailable] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete _onAudioVideoAvailableCallbackMap[callbackID];\n      }\n    } else {\n      _onAudioVideoAvailableCallbackMap[callbackID] = callback;\n    }\n  },\n  onAudioVideoUnavailable(callbackID: string, callback?: Function) {\n    if (typeof callback !== 'function') {\n      if (callbackID in _onAudioVideoUnavailableCallbackMap) {\n        zloginfo(\n          '[onAudioVideoUnavailable] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete _onAudioVideoUnavailableCallbackMap[callbackID];\n      }\n    } else {\n      _onAudioVideoUnavailableCallbackMap[callbackID] = callback;\n    }\n  },\n  startPlayingAllAudioVideo() {\n    ZegoExpressEngine.instance().muteAllPlayStreamAudio(false);\n    ZegoExpressEngine.instance().muteAllPlayStreamVideo(false);\n  },\n  stopPlayingAllAudioVideo() {\n    ZegoExpressEngine.instance().muteAllPlayStreamAudio(true);\n    ZegoExpressEngine.instance().muteAllPlayStreamVideo(true);\n  },\n  onTurnOnYourCameraRequest(callbackID: string, callback?: Function) {\n    if (typeof callback !== 'function') {\n      if (callbackID in _onTurnOnYourCameraRequestCallbackMap) {\n        zloginfo(\n          '[onTurnOnYourCameraRequest] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete _onTurnOnYourCameraRequestCallbackMap[callbackID];\n      }\n    } else {\n      _onTurnOnYourCameraRequestCallbackMap[callbackID] = callback;\n    }\n  },\n  onTurnOnYourMicrophoneRequest(callbackID: string, callback?: Function) {\n    if (typeof callback !== 'function') {\n      if (callbackID in _onTurnOnYourMicrophoneRequestCallbackMap) {\n        zloginfo(\n          '[onTurnOnYourMicrophoneRequest] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete _onTurnOnYourMicrophoneRequestCallbackMap[callbackID];\n      }\n    } else {\n      _onTurnOnYourMicrophoneRequestCallbackMap[callbackID] = callback;\n    }\n  },\n\n  // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Room <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n  joinRoom(roomID: string, token: string, markAsLargeRoom = false) {\n    // Solve the problem of repeated join\n    if (_isRoomConnected && _currentRoomID === roomID) {\n      zloginfo('Join room success already');\n      return Promise.resolve();\n    }\n    return new Promise<void>((resolve, reject) => {\n      const user = {\n        userID: _localCoreUser.userID,\n        userName: _localCoreUser.userName,\n      };\n      const config = { isUserStatusNotify: true } as ZegoRoomConfig;\n      token && (config.token = token);\n      _currentRoomID = roomID;\n      ZegoExpressEngine.instance()\n        .loginRoom(roomID, user, config)\n        .then(() => {\n          zloginfo('Join room success.', user);\n          _roomMemberCount = 1\n          _markAsLargeRoom = markAsLargeRoom;\n          ZegoExpressEngine.instance().startSoundLevelMonitor();\n\n          _localCoreUser.streamID = _getPublishStreamID();\n          _coreUserMap[_localCoreUser.userID] = _localCoreUser;\n          _notifyUserCountOrPropertyChanged(ZegoChangedCountOrProperty.userAdd);\n\n          _tryStartPublishStream()\n\n          resolve();\n        })\n        .catch((error) => {\n          zlogerror('Join room falied: ', error);\n          _currentRoomID = '';\n          reject(error);\n        });\n    });\n  },\n  leaveRoom() {\n    return _leaveRoom();\n  },\n  onRoomStateChanged(callbackID: string, callback?: Function) {\n    if (typeof callback !== 'function') {\n      if (callbackID in _onRoomStateChangedCallbackMap) {\n        zloginfo(\n          '[onRoomStateChanged] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete _onRoomStateChangedCallbackMap[callbackID];\n      }\n    } else {\n      _onRoomStateChangedCallbackMap[callbackID] = callback;\n    }\n  },\n  onRequireNewToken(callbackID: string, callback?: Function) {\n    if (typeof callback !== 'function') {\n      if (callbackID in _onRequireNewTokenCallbackMap) {\n        zloginfo(\n          '[onRequireNewToken] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete _onRequireNewTokenCallbackMap[callbackID];\n      }\n    } else {\n      _onRequireNewTokenCallbackMap[callbackID] = callback;\n    }\n  },\n  setRoomProperty(key: string, value: any) {\n    if (!_isRoomConnected) {\n      zlogerror('You need to join the room before using this interface!');\n      return;\n    }\n    if (_roomProperties[key] === value) {\n      return;\n    }\n    const oldValue = _roomProperties[key];\n    const oldRoomProperties = JSON.parse(JSON.stringify(_roomProperties));\n    _roomProperties[key] = value;\n    const extraInfo = JSON.stringify(_roomProperties);\n    zloginfo('[updateRoomProperties]Set start', extraInfo);\n    return new Promise<void>((resolve, reject) => {\n      ZegoExpressEngine.instance().setRoomExtraInfo(_currentRoomID, 'extra_info', extraInfo).then(({ errorCode }) => {\n        if (errorCode === 0) {\n          zloginfo('[updateRoomProperties]Set success');\n          resolve();\n          // Notify\n          _notifyRoomPropertyUpdate(key, oldValue, value, ZegoRoomPropertyUpdateType.set);\n          _notifyRoomPropertiesFullUpdate([key], oldRoomProperties, JSON.parse(extraInfo), ZegoRoomPropertyUpdateType.set);\n        } else {\n          // Restore\n          _roomProperties = JSON.parse(JSON.stringify(oldRoomProperties));\n          zlogwarning('[setRoomProperty]Set failed, errorCode: ', errorCode);\n          reject({ code: errorCode });\n        }\n      }).catch((error) => {\n        // Restore\n        _roomProperties = JSON.parse(JSON.stringify(oldRoomProperties));\n        zlogerror('[setRoomProperty]Set error', error);\n        reject(error);\n      });\n    });\n  },\n  updateRoomProperties(newRoomProperties: any) {\n    if (!_isRoomConnected) {\n      zlogerror('You need to join the room before using this interface!');\n      return Promise.reject();\n    }\n    const updateKeys: string[] = [];\n    const oldRoomProperties = JSON.parse(JSON.stringify(_roomProperties));\n    Object.keys(newRoomProperties).forEach((key) => {\n      if (oldRoomProperties[key] !== newRoomProperties[key]) {\n        updateKeys.push(key);\n        _roomProperties[key] = newRoomProperties[key];\n      }\n    })\n    const extraInfo = JSON.stringify(_roomProperties);\n    zloginfo('[updateRoomProperties]Update start', extraInfo);\n    return new Promise<void>((resolve, reject) => {\n      ZegoExpressEngine.instance().setRoomExtraInfo(_currentRoomID, 'extra_info', extraInfo).then(({ errorCode }) => {\n        if (errorCode === 0) {\n          zloginfo('[updateRoomProperties]Update success');\n          resolve();\n          // Notify\n          updateKeys.forEach((updateKey) => {\n            const oldValue = oldRoomProperties[updateKey];\n            const value = newRoomProperties[updateKey];\n            _notifyRoomPropertyUpdate(updateKey, oldValue, value, ZegoRoomPropertyUpdateType.update);\n          })\n          updateKeys.length && _notifyRoomPropertiesFullUpdate(updateKeys, oldRoomProperties, JSON.parse(extraInfo), ZegoRoomPropertyUpdateType.update);\n        } else {\n          // Restore\n          _roomProperties = JSON.parse(JSON.stringify(oldRoomProperties));\n          zlogwarning('[updateRoomProperties]Update failed, errorCode: ', errorCode);\n          reject({ code: errorCode });\n        }\n      }).catch((error) => {\n        // Restore\n        _roomProperties = JSON.parse(JSON.stringify(oldRoomProperties));\n        zlogerror('[updateRoomProperties]Update error', error);\n        reject(error);\n      });\n    });\n  },\n  getRoomProperties() {\n    return _roomProperties;\n  },\n  onRoomPropertyUpdated(callbackID: string, callback?: Function) {\n    if (typeof callback !== 'function') {\n      if (callbackID in _onRoomPropertyUpdatedCallbackMap) {\n        zloginfo(\n          '[onRoomPropertyUpdated] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete _onRoomPropertyUpdatedCallbackMap[callbackID];\n      }\n    } else {\n      _onRoomPropertyUpdatedCallbackMap[callbackID] = callback;\n    }\n  },\n  onRoomPropertiesFullUpdated(callbackID: string, callback?: Function) {\n    if (typeof callback !== 'function') {\n      if (callbackID in _onRoomPropertiesFullUpdatedCallbackMap) {\n        zloginfo(\n          '[onRoomPropertiesFullUpdated] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete _onRoomPropertiesFullUpdatedCallbackMap[callbackID];\n      }\n    } else {\n      _onRoomPropertiesFullUpdatedCallbackMap[callbackID] = callback;\n    }\n  },\n  sendInRoomCommand(command: string, toUserIDs: string[] = []) {\n    const toUserList = toUserIDs.map((userID) => {\n      const userInfo = _coreUserMap[userID];\n      const userName = userInfo ? (userInfo.userName || '') : '';\n      return {\n        userID,\n        userName,\n      };\n    });\n    return _sendInRoomCommand(command, toUserList);\n  },\n  onInRoomCommandReceived(callbackID: string, callback?: Function) {\n    if (typeof callback !== 'function') {\n      if (callbackID in _onInRoomCommandReceivedCallbackMap) {\n        zloginfo(\n          '[onInRoomCommandReceived] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete _onInRoomCommandReceivedCallbackMap[callbackID];\n      }\n    } else {\n      _onInRoomCommandReceivedCallbackMap[callbackID] = callback;\n    }\n  },\n  onMeRemovedFromRoom(callbackID: string, callback?: Function) {\n    if (typeof callback !== 'function') {\n      if (callbackID in _onMeRemovedFromRoomCallbackMap) {\n        zloginfo(\n          '[onMeRemovedFromRoom] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete _onMeRemovedFromRoomCallbackMap[callbackID];\n      }\n    } else {\n      _onMeRemovedFromRoomCallbackMap[callbackID] = callback;\n    }\n  },\n\n  // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> User <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n  connectUser(userID: string, userName: string) {\n    _setLocalUserInfo({ userID: userID, userName: userName });\n    // TODO ZIM login\n  },\n  disconnectUser() {\n    delete _coreUserMap[_localCoreUser.userID];\n    _localCoreUser = _createCoreUser('', '', '', {});\n    // TODO ZIM logout\n  },\n  getLocalUserInfo() {\n    return _localCoreUser;\n  },\n  getUser(userID: string) {\n    return _coreUserMap[userID];\n  },\n  getAllUsers() {\n    const users = Object.values(_coreUserMap);\n    users.sort((a: any, b: any) => {\n      return a.joinTime - b.joinTime;\n    });\n    var publicUsers: any[] = [];\n    users.forEach((user) => {\n      publicUsers.push(_createPublicUser(user));\n    });\n    return publicUsers;\n  },\n  onUserJoin(callbackID: string, callback?: Function) {\n    if (typeof callback !== 'function') {\n      if (callbackID in _onUserJoinCallbackMap) {\n        zloginfo(\n          '[onUserJoin] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete _onUserJoinCallbackMap[callbackID];\n      }\n    } else {\n      _onUserJoinCallbackMap[callbackID] = callback;\n    }\n  },\n  onUserLeave(callbackID: string, callback?: Function) {\n    if (typeof callback !== 'function') {\n      if (callbackID in _onUserLeaveCallbackMap) {\n        zloginfo(\n          '[onUserLeave] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete _onUserLeaveCallbackMap[callbackID];\n      }\n    } else {\n      _onUserLeaveCallbackMap[callbackID] = callback;\n    }\n  },\n  onOnlySelfInRoom(callbackID: string, callback?: Function) {\n    if (typeof callback !== 'function') {\n      if (callbackID in _onOnlySelfInRoomCallbackMap) {\n        zloginfo(\n          '[onOnlySelfInRoom] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete _onOnlySelfInRoomCallbackMap[callbackID];\n      }\n    } else {\n      _onOnlySelfInRoomCallbackMap[callbackID] = callback;\n    }\n  },\n  onUserCountOrPropertyChanged(callbackID: string, callback?: Function) {\n    if (typeof callback !== 'function') {\n      if (callbackID in _onUserCountOrPropertyChangedCallbackMap) {\n        zloginfo(\n          '[onUserCountOrPropertyChanged] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete _onUserCountOrPropertyChangedCallbackMap[callbackID];\n      }\n    } else {\n      _onUserCountOrPropertyChangedCallbackMap[callbackID] = callback;\n    }\n  },\n  removeUserFromRoom(userIDs: string[] = []) {\n    const command = JSON.stringify({ zego_remove_user: userIDs });\n    const toUserList = (_isLargeRoom || _markAsLargeRoom) ? [] : userIDs.map((userID) => {\n      const userInfo = _coreUserMap[userID];\n      const userName = userInfo ? (userInfo.userName || '') : '';\n      return {\n        userID,\n        userName,\n      };\n    });\n    return _sendInRoomCommand(command, toUserList);\n  },\n\n  // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Message <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n  getInRoomMessages() {\n    return _inRoomMessageList;\n  },\n  sendInRoomMessage(message: string) {\n    return new Promise((resolve, reject) => {\n      ZegoExpressEngine.instance()\n        .sendBroadcastMessage(_currentRoomID, message)\n        .then((result) => {\n          zloginfo('SendInRoomMessage finished.', result);\n          const { errorCode, messageID } = result;\n          if (errorCode > 0) {\n            reject(errorCode);\n          } else {\n            const inRoomMessage = {\n              message: message,\n              messageID: messageID,\n              sendTime: Date.now(),\n              sender: _createPublicUser(_localCoreUser),\n            };\n            _inRoomMessageList.push(inRoomMessage);\n\n            Object.keys(_onInRoomMessageSentCallbackMap).forEach(\n              (callbackID) => {\n                // callback may remove from map during room state chaging\n                if (callbackID in _onInRoomMessageSentCallbackMap) {\n                  if (_onInRoomMessageSentCallbackMap[callbackID]) {\n                    _onInRoomMessageSentCallbackMap[callbackID](\n                      errorCode,\n                      messageID\n                    );\n                  }\n                }\n              }\n            );\n\n            resolve(result);\n          }\n        })\n        .catch((error) => {\n          zlogerror('SendInRoomMessage falied: ', error);\n          reject(error);\n        });\n    });\n  },\n  onInRoomMessageReceived(callbackID: string, callback?: Function) {\n    if (typeof callback !== 'function') {\n      if (callbackID in _onInRoomMessageReceivedCallbackMap) {\n        zloginfo(\n          '[onInRoomMessageReceived] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete _onInRoomMessageReceivedCallbackMap[callbackID];\n      }\n    } else {\n      _onInRoomMessageReceivedCallbackMap[callbackID] = callback;\n    }\n  },\n  onInRoomMessageSent(callbackID: string, callback?: Function) {\n    if (typeof callback !== 'function') {\n      if (callbackID in _onInRoomMessageSentCallbackMap) {\n        zloginfo(\n          '[onInRoomMessageSent] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete _onInRoomMessageSentCallbackMap[callbackID];\n      }\n    } else {\n      _onInRoomMessageSentCallbackMap[callbackID] = callback;\n    }\n  },\n  // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Live audio room <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n  notifyUserCountOrPropertyChanged(type: number) {\n    _notifyUserCountOrPropertyChanged(type);\n  },\n  notifyUserInfoUpdate(userID: string) {\n    // Update avatar properties\n    if ( _coreUserMap[userID] && _coreUserMap[userID].inRoomAttributes) {\n      _coreUserMap[userID].avatar = _coreUserMap[userID].inRoomAttributes.avatar;\n    }\n    _notifyUserInfoUpdate(_coreUserMap[userID]);\n  },\n  // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Force update component <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n  forceSortMemberList() {\n    zloginfo('[forceSortMemberList callback]');\n    const userList = Object.values(_coreUserMap)\n      .sort((user1: any, user2: any) => {\n        return user2.joinTime - user1.joinTime;\n      })\n      .map((user) => _createPublicUser(user));\n    Object.keys(_onMemberListForceSortCallbackMap).forEach((callbackID) => {\n      if (_onMemberListForceSortCallbackMap[callbackID]) {\n        _onMemberListForceSortCallbackMap[callbackID](userList);\n      }\n    });\n  },\n  onMemberListForceSort(callbackID: string, callback?: Function) {\n    if (typeof callback !== 'function') {\n      if (callbackID in _onMemberListForceSortCallbackMap) {\n        zloginfo(\n          '[onMemberListForceSort] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete _onMemberListForceSortCallbackMap[callbackID];\n      }\n    } else {\n      _onMemberListForceSortCallbackMap[callbackID] = callback;\n    }\n  },\n  forceSortAudioVideoList() {\n    zloginfo('[forceSortAudioVideoList callback]');\n    Object.keys(_onAudioVideoListForceSortCallbackMap).forEach((callbackID) => {\n      if (_onAudioVideoListForceSortCallbackMap[callbackID]) {\n        _onAudioVideoListForceSortCallbackMap[callbackID]();\n      }\n    });\n  },\n  onAudioVideoListForceSort(callbackID: string, callback?: Function) {\n    if (typeof callback !== 'function') {\n      if (callbackID in _onAudioVideoListForceSortCallbackMap) {\n        zloginfo(\n          '[onAudioVideoListForceSort] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete _onAudioVideoListForceSortCallbackMap[callbackID];\n      }\n    } else {\n      _onAudioVideoListForceSortCallbackMap[callbackID] = callback;\n    }\n  },\n  forceRenderVideoView() {\n    zloginfo('[forceRenderVideoView callback]');\n    Object.keys(_onVideoViewForceRenderCallbackMap).forEach((callbackID) => {\n      if (_onVideoViewForceRenderCallbackMap[callbackID]) {\n        _onVideoViewForceRenderCallbackMap[callbackID]();\n      }\n    });\n  },\n  onVideoViewForceRender(callbackID: string, callback?: Function) {\n    if (typeof callback !== 'function') {\n      if (callbackID in _onVideoViewForceRenderCallbackMap) {\n        zloginfo(\n          '[onVideoViewForceRender] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete _onVideoViewForceRenderCallbackMap[callbackID];\n      }\n    } else {\n      _onVideoViewForceRenderCallbackMap[callbackID] = callback;\n    }\n  },\n  \n  onError(callbackID: string, callback?: Function) {\n    if (typeof callback !== 'function') {\n        if (callbackID in _onErrorCallbackMap) {\n            zloginfo(\n                '[onError] Remove callback for: [',\n                callbackID,\n                '] because callback is not a valid function!'\n              );\n            delete _onErrorCallbackMap[callbackID];\n        }\n    } else {\n        _onErrorCallbackMap[callbackID] = callback;\n    }\n  },\n\n  notifyErrorUpdate(method: string, error: number, message: string) {\n    Object.keys(_onErrorCallbackMap).forEach((callbackID) => {\n      if (_onErrorCallbackMap[callbackID]) {\n          _onErrorCallbackMap[callbackID](method, error, message);\n      }\n    });\n  }\n};\n"],"mappings":"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"}
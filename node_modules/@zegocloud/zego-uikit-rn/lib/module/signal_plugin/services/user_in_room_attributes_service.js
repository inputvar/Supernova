var _class;
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
import ZegoPluginUserInRoomAttributesCore from '../core/user_in_room_attributes_core';
export default class ZegoPluginUserInRoomAttributesService {
  constructor() {
    if (!ZegoPluginUserInRoomAttributesService.shared) {
      ZegoPluginUserInRoomAttributesService.shared = this;
    }
    return ZegoPluginUserInRoomAttributesService.shared;
  }
  static getInstance() {
    if (!ZegoPluginUserInRoomAttributesService.shared) {
      ZegoPluginUserInRoomAttributesService.shared = new ZegoPluginUserInRoomAttributesService();
    }
    return ZegoPluginUserInRoomAttributesService.shared;
  }
  joinRoom(roomID) {
    return ZegoPluginUserInRoomAttributesCore.getInstance().joinRoom(roomID);
  }
  leaveRoom() {
    return ZegoPluginUserInRoomAttributesCore.getInstance().leaveRoom();
  }
  setUsersInRoomAttributes(key, value, userIDs) {
    const attributes = {
      [key]: value
    };
    return ZegoPluginUserInRoomAttributesCore.getInstance().setUsersInRoomAttributes(attributes, userIDs);
  }
  queryUsersInRoomAttributes(nextFlag, count) {
    const config = {
      nextFlag,
      count
    };
    return ZegoPluginUserInRoomAttributesCore.getInstance().queryUsersInRoomAttributes(config);
  }
  onUsersInRoomAttributesUpdated(callbackID, callback) {
    ZegoPluginUserInRoomAttributesCore.getInstance().onUsersInRoomAttributesUpdated(callbackID, callback);
  }
}
_class = ZegoPluginUserInRoomAttributesService;
_defineProperty(ZegoPluginUserInRoomAttributesService, "shared", void 0);
//# sourceMappingURL=user_in_room_attributes_service.js.map
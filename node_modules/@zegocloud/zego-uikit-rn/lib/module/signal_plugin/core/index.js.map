{"version":3,"names":["ZIMConnectionState","ZIMCallUserState","ZegoPluginResult","zlogerror","zloginfo","zlogwarning","ZegoPluginUserInRoomAttributesCore","ZegoPluginRoomPropertiesCore","ZegoUIKitCorePlugin","ZegoSignalingPluginCore","constructor","_defineProperty","Map","Disconnected","shared","getInstance","_registerEngineCallback","getZIMPlugin","default","on","zim","errorInfo","code","message","_ref","state","event","extendedData","_connectionState","_notifyConnectionStateChanged","_ref2","callID","inviter","timeout","_currentInvitationID","_callIDUsers","set","console","log","notifyData","id","extendedMap","JSON","parse","name","inviter_name","type","data","_notifyCallInvitationReceived","_ref3","delete","_notifyCallInvitationCancelled","_ref4","invitee","_notifyCallInvitationAccepted","_ref5","_notifyCallInvitationRejected","_ref6","_getInviterIDByCallID","_notifyCallInvitationTimeout","_ref7","invitees","map","_notifyCallInviteesAnsweredTimeout","_unregisterEngineCallback","off","Object","keys","_onConnectionStateChangedCallbackMap","forEach","callbackID","_onCallInvitationReceivedCallbackMap","_onCallInvitationCancelledCallbackMap","_onCallInvitationAcceptedCallbackMap","_onCallInvitationRejectedCallbackMap","_onCallInvitationTimeoutCallbackMap","_onCallInviteesAnsweredTimeoutCallbackMap","_resetData","_resetDataForLogout","_isLogin","_loginUser","clear","get","_createHandle","getLocalUser","getCallIDByUserID","userID","Array","from","key","value","getZIMInstance","getVersion","create","appConfig","login","userInfo","token","arguments","length","undefined","Promise","resolve","reject","then","catch","error","logout","destroy","invite","config","warn","callInvite","_ref8","errorInvitees","errorInviteeIDs","errorInvitee","desc","Offline","Inviting","push","cancel","callCancel","_ref9","resCallID","inviteeID","accept","callAccept","_ref10","callReject","_ref11","queryCallList","queryCallInvitationList","_ref12","callList","nextFlag","newFlag","onConnectionStateChanged","callback","onCallInvitationReceived","onCallInvitationCancelled","onCallInvitationAccepted","onCallInvitationRejected","onCallInvitationTimeout","onCallInviteesAnsweredTimeout","_class"],"sources":["index.ts"],"sourcesContent":["import type {\n  ZIMAppConfig,\n  ZIMUserInfo,\n  ZIMCallInviteConfig,\n  ZIMCallCancelConfig,\n  ZIMCallAcceptConfig,\n  ZIMCallRejectConfig,\n  ZIMError,\n  ZIMEventOfConnectionStateChangedResult,\n  ZIMEventOfCallInvitationReceivedResult,\n  ZIMEventOfCallInvitationCancelledResult,\n  ZIMEventOfCallInvitationAcceptedResult,\n  ZIMEventOfCallInvitationRejectedResult,\n  ZIMEventOfCallInvitationTimeoutResult,\n  ZIMEventOfCallInviteesAnsweredTimeoutResult,\n  ZIMCallInvitationSentResult,\n  ZIMCallCancelSentResult,\n  ZIMCallAcceptanceSentResult,\n  ZIMCallRejectionSentResult,\n  ZIMCallInvitationQueryConfig,\n  ZIMCallInvitationListQueriedResult,\n  ZIMCallInfo,\n} from 'zego-zim-react-native';\nimport { ZIMConnectionState, ZIMCallUserState } from \"../defines\";\nimport ZegoPluginResult from './defines';\nimport { zlogerror, zloginfo, zlogwarning } from '../utils/logger';\nimport ZegoPluginUserInRoomAttributesCore from './user_in_room_attributes_core';\nimport ZegoPluginRoomPropertiesCore from './room_properties_core';\nimport ZegoUIKitCorePlugin from \"../../components/internal/ZegoUIKitCorePlugin\";\n\nexport default class ZegoSignalingPluginCore {\n  static shared: ZegoSignalingPluginCore;\n  _loginUser = {} as ZIMUserInfo;\n  _isLogin = false;\n  _callIDUsers = new Map<string, string>(); // <zim call id, user id>\n  _connectionState = ZIMConnectionState.Disconnected;\n  _onConnectionStateChangedCallbackMap: { [index: string]: (notifyData: { state: ZIMConnectionState }) => void } = {};\n  _onCallInvitationReceivedCallbackMap: { [index: string]: (notifyData: {\n    callID: string;\n    inviter: { name: string; id: string; }; type: number; data: string;\n  }) => void } = {};\n  _onCallInvitationCancelledCallbackMap: { [index: string]: (notifyData: {\n    callID: string;\n    inviter: { id: string; name: string; };\n    data: string;\n  }) => void } = {};\n  _onCallInvitationAcceptedCallbackMap: { [index: string]: (notifyData: {\n    callID: string;\n    invitee: { id: string; name: string; };\n    data: string;\n  }) => void } = {};\n  _onCallInvitationRejectedCallbackMap: { [index: string]: (notifyData: {\n    callID: string;\n    invitee: { id: string; name: string; };\n    data: string;\n  }) => void } = {};\n  _onCallInvitationTimeoutCallbackMap: { [index: string]: (notifyData: {\n    callID: string;\n    inviter: { id: string; name: string; };\n    data: string;\n  }) => void } = {};\n  _onCallInviteesAnsweredTimeoutCallbackMap: { [index: string]: (notifyData: {\n    callID: string;\n    invitees: { id: string; name: string; }[];\n    data: string;\n  }) => void } = {};\n  _currentInvitationID = ''\n  constructor() {\n    if (!ZegoSignalingPluginCore.shared) {\n      zloginfo('[Core]ZegoSignalingPluginCore successful instantiation.');\n      ZegoSignalingPluginCore.shared = this;\n    }\n    return ZegoSignalingPluginCore.shared;\n  }\n  static getInstance() {\n    if (!ZegoSignalingPluginCore.shared) {\n      ZegoSignalingPluginCore.shared = new ZegoSignalingPluginCore();\n    }\n    return ZegoSignalingPluginCore.shared;\n  }\n  // ------- internal events register ------\n  _registerEngineCallback() {\n    zloginfo('[Core]Register callback for ZIM...');\n    ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance().on('error', (zim: any, errorInfo: ZIMError) => {\n      zlogerror(\n        `[Core]Zim error, code:${errorInfo.code}, message:${errorInfo.message}.`\n      );\n    });\n    ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance().on(\n      'connectionStateChanged',\n      (zim: any, { state, event, extendedData }: ZIMEventOfConnectionStateChangedResult) => {\n        zloginfo(\n          `[Core]Connection state changed, state:${state}, event:${event}, extended data:${extendedData}`\n        );\n        this._connectionState = state;\n        this._notifyConnectionStateChanged({ state });\n        if (this._connectionState === ZIMConnectionState.Disconnected) {\n          zlogwarning('[Core]Disconnected, auto logout.');\n          // this.logout();\n        }\n      }\n    );\n    // Callback of the call invitation received by the invitee.\n    ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance().on(\n      'callInvitationReceived',\n      (zim: any, { callID, inviter, timeout, extendedData }: ZIMEventOfCallInvitationReceivedResult) => {\n        zloginfo(\n          '[Core][callInvitationReceived callback]',\n          callID,\n          inviter,\n          timeout,\n          extendedData\n        );\n        if (this._currentInvitationID == callID) {\n          return\n        } else {\n          this._currentInvitationID = callID\n        }\n        this._callIDUsers.set(callID, inviter);\n        console.log('ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance().onCallInvitationReceived', callID, extendedData)\n        \n        const notifyData: any = { callID, inviter: { id: inviter } };\n        if (extendedData) {\n          const extendedMap = JSON.parse(extendedData);\n          notifyData.inviter.name = extendedMap.inviter_name;\n          notifyData.type = extendedMap.type;\n          notifyData.data = extendedMap.data;\n        }\n        this._notifyCallInvitationReceived(notifyData);\n      }\n    );\n    // Callback of the disinvitation notification received by the invitee.\n    ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance().on(\n      'callInvitationCancelled',\n      (zim: any, { callID, inviter, extendedData }: ZIMEventOfCallInvitationCancelledResult) => {\n        zloginfo(\n          '[Core][callInvitationCancelled callback]',\n          callID,\n          inviter,\n          extendedData\n        );\n        this._callIDUsers.delete(callID);\n        const notifyData = {\n          callID,\n          inviter: { id: inviter, name: '' },\n          data: extendedData,\n        };\n        this._notifyCallInvitationCancelled(notifyData);\n      }\n    );\n    // Callback of the invitation acceptance notification received by the inviter.\n    ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance().on(\n      'callInvitationAccepted',\n      (zim: any, { callID, invitee, extendedData }: ZIMEventOfCallInvitationAcceptedResult) => {\n        zloginfo(\n          '[Core][callInvitationAccepted callback]',\n          callID,\n          invitee,\n          extendedData\n        );\n        const notifyData = {\n          callID,\n          invitee: { id: invitee, name: '' },\n          data: extendedData,\n        };\n        this._notifyCallInvitationAccepted(notifyData);\n      }\n    );\n    // Callback of notification received by the inviter that the inviter has declined the invitation.\n    ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance().on(\n      'callInvitationRejected',\n      (zim: any, { callID, invitee, extendedData }: ZIMEventOfCallInvitationRejectedResult) => {\n        zloginfo(\n          '[Core][callInvitationRejected callback]',\n          callID,\n          invitee,\n          extendedData\n        );\n        const notifyData = {\n          callID,\n          invitee: { id: invitee, name: '' },\n          data: extendedData,\n        };\n        this._notifyCallInvitationRejected(notifyData);\n      }\n    );\n    // Call invitation timeout notification callback for the invitee.\n    ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance().on('callInvitationTimeout', (zim: any, { callID }: ZIMEventOfCallInvitationTimeoutResult) => {\n      zloginfo('[Core][callInvitationTimeout callback]', callID);\n      const notifyData = {\n        callID,\n        inviter: { id: this._getInviterIDByCallID(callID), name: '' },\n        data: '',\n      };\n      this._notifyCallInvitationTimeout(notifyData);\n    });\n    // Call invitation timeout notification callback by the inviter.\n    ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance().on(\n      'callInviteesAnsweredTimeout',\n      (zim: any, { callID, invitees }: ZIMEventOfCallInviteesAnsweredTimeoutResult) => {\n        zloginfo(\n          '[Core][callInviteesAnsweredTimeout callback]',\n          callID,\n          invitees\n        );\n        const notifyData = {\n          callID,\n          invitees: invitees.map((invitee) => {\n            return { id: invitee, name: '' };\n          }),\n          data: '',\n        };\n        this._notifyCallInviteesAnsweredTimeout(notifyData);\n      }\n    );\n  }\n  _unregisterEngineCallback() {\n    zloginfo('[Core]Unregister callback from ZIM...');\n    ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance().off('error');\n    ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance().off('connectionStateChanged');\n    ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance().off('callInvitationReceived');\n    ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance().off('callInvitationCancelled');\n    ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance().off('callInvitationAccepted');\n    ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance().off('callInvitationRejected');\n    ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance().off('callInvitationTimeout');\n    ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance().off('callInviteesAnsweredTimeout');\n  }\n  // ------- internal events exec ------\n  _notifyConnectionStateChanged(notifyData: { state: ZIMConnectionState }) {\n    Object.keys(this._onConnectionStateChangedCallbackMap).forEach(\n      (callbackID) => {\n        if (this._onConnectionStateChangedCallbackMap[callbackID]) {\n          this._onConnectionStateChangedCallbackMap[callbackID](notifyData);\n        }\n      }\n    );\n  }\n  _notifyCallInvitationReceived(notifyData: {\n    callID: string;\n    inviter: { name: string; id: string; };\n    type: number;\n    data: string;\n  }) {\n    Object.keys(this._onCallInvitationReceivedCallbackMap).forEach(\n      (callbackID) => {\n        if (this._onCallInvitationReceivedCallbackMap[callbackID]) {\n          this._onCallInvitationReceivedCallbackMap[callbackID](notifyData);\n        }\n      }\n    );\n  }\n  _notifyCallInvitationCancelled(notifyData: {\n    callID: string;\n    inviter: { id: string; name: string; };\n    data: string;\n  }) {\n    Object.keys(this._onCallInvitationCancelledCallbackMap).forEach(\n      (callbackID) => {\n        if (this._onCallInvitationCancelledCallbackMap[callbackID]) {\n          this._onCallInvitationCancelledCallbackMap[callbackID](notifyData);\n        }\n      }\n    );\n  }\n  _notifyCallInvitationAccepted(notifyData: {\n    callID: string;\n    invitee: { id: string; name: string; };\n    data: string;\n  }) {\n    Object.keys(this._onCallInvitationAcceptedCallbackMap).forEach(\n      (callbackID) => {\n        if (this._onCallInvitationAcceptedCallbackMap[callbackID]) {\n          this._onCallInvitationAcceptedCallbackMap[callbackID](notifyData);\n        }\n      }\n    );\n  }\n  _notifyCallInvitationRejected(notifyData: {\n    callID: string;\n    invitee: { id: string; name: string; };\n    data: string;\n  }) {\n    Object.keys(this._onCallInvitationRejectedCallbackMap).forEach(\n      (callbackID) => {\n        if (this._onCallInvitationRejectedCallbackMap[callbackID]) {\n          this._onCallInvitationRejectedCallbackMap[callbackID](notifyData);\n        }\n      }\n    );\n  }\n  _notifyCallInvitationTimeout(notifyData: {\n    callID: string;\n    inviter: { id: string; name: string; };\n    data: string;\n  }) {\n    Object.keys(this._onCallInvitationTimeoutCallbackMap).forEach(\n      (callbackID) => {\n        if (this._onCallInvitationTimeoutCallbackMap[callbackID]) {\n          this._onCallInvitationTimeoutCallbackMap[callbackID](notifyData);\n        }\n      }\n    );\n  }\n  _notifyCallInviteesAnsweredTimeout(notifyData: {\n    callID: string;\n    invitees: { id: string; name: string; }[];\n    data: string;\n  }) {\n    Object.keys(this._onCallInviteesAnsweredTimeoutCallbackMap).forEach(\n      (callbackID) => {\n        if (this._onCallInviteesAnsweredTimeoutCallbackMap[callbackID]) {\n          this._onCallInviteesAnsweredTimeoutCallbackMap[callbackID](\n            notifyData\n          );\n        }\n      }\n    );\n  }\n  // ------- internal utils ------\n  _resetData() {\n    this._resetDataForLogout();\n  }\n  _resetDataForLogout() {\n    this._isLogin = false;\n    this._loginUser = {} as ZIMUserInfo;\n    this._callIDUsers.clear();\n    this._connectionState = ZIMConnectionState.Disconnected;\n  }\n  _getInviterIDByCallID(callID: string) {\n    return this._callIDUsers.get(callID);\n  }\n  _createHandle() {\n    this._unregisterEngineCallback();\n    this._registerEngineCallback();\n    // live audio room\n    ZegoPluginUserInRoomAttributesCore.getInstance()._unregisterEngineCallback();\n    ZegoPluginUserInRoomAttributesCore.getInstance()._registerEngineCallback();\n    ZegoPluginRoomPropertiesCore.getInstance()._unregisterEngineCallback();\n    ZegoPluginRoomPropertiesCore.getInstance()._registerEngineCallback();\n  }\n  // ------- external utils ------\n  getLocalUser() {\n    return this._loginUser;\n  }\n  getCallIDByUserID(userID: string) {\n    let callID = '';\n    Array.from(this._callIDUsers.keys()).forEach((key) => {\n      const value = this._callIDUsers.get(key);\n      if (userID === value) {\n        callID = key;\n        zloginfo('[Core]getCallIDByUserID', userID, this._callIDUsers, callID);\n      }\n    });\n    return callID;\n  }\n  // ------- external method ------\n  getZIMInstance() {\n    return ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance();\n  }\n  getVersion(): Promise<string> {\n    return ZegoUIKitCorePlugin.getZIMPlugin().default.getVersion();\n  }\n  create(appConfig: ZIMAppConfig) {\n    if (!ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance()) {\n      const zim = ZegoUIKitCorePlugin.getZIMPlugin().default.create(appConfig);\n      if (!zim) {\n        zlogerror('[Core]Create zim error.');\n      } else {\n        zloginfo('[Core]Create zim success.');\n        this._createHandle();\n      }\n    } else {\n      zlogwarning('[Core]Zim has created.');\n      this._createHandle();\n    }\n  }\n  login(userInfo: ZIMUserInfo, token = ''): Promise<void> {\n    return new Promise((resolve, reject) => {\n      if (!this._isLogin) {\n        ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance()\n          .login(userInfo, token)\n          .then(() => {\n            zloginfo('[Core]Login success.');\n            this._loginUser = userInfo;\n            this._isLogin = true;\n            resolve();\n          }).catch((error: ZIMError) => {\n            if (error.code == 6000111) {\n              zloginfo('[Core]Login already success.', error);\n              resolve();\n            } else {\n              reject(error);\n            }\n          });\n      } else {\n        zloginfo('[Core]Login already success.');\n        resolve();\n      }\n    });\n  }\n  logout(): Promise<void> {\n    return ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance()\n      .logout()\n      .then(() => {\n        zloginfo('[Core]Logout success.');\n        this._resetDataForLogout();\n        // live audio room\n        ZegoPluginUserInRoomAttributesCore.getInstance()._resetData();\n      });\n  }\n  destroy() {\n    ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance().destroy();\n    zloginfo('[Core]Destroy success.');\n    this._resetData();\n  }\n  invite(invitees: string[], config: ZIMCallInviteConfig): Promise<{ callID: string; errorInvitees: string[]; code: string, message: string; }> {\n    return new Promise((resolve, reject) => {\n      console.warn(invitees);\n      console.warn(config);\n      ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance()\n        .callInvite(invitees, config)\n        .then(({ callID, timeout, errorInvitees }: ZIMCallInvitationSentResult) => {\n          this._callIDUsers.set(callID, this._loginUser.userID);\n          if (!errorInvitees || !errorInvitees.length) {\n            zloginfo(`[Core]Invite done, call id: ${callID}`);\n            resolve({\n              ...new ZegoPluginResult('', ''),\n              callID,\n              errorInvitees: [],\n            });\n          } else {\n            const errorInviteeIDs: string[] = [];\n            errorInvitees.forEach((errorInvitee) => {\n              const desc =\n                errorInvitee.state === ZIMCallUserState.Offline\n                  ? 'offine'\n                  : errorInvitee.state === ZIMCallUserState.Inviting\n                  ? 'inviting'\n                  : '';\n              zlogwarning(\n                `[Core]Invite error, invitee id: ${errorInvitee.userID}, invitee state: ${errorInvitee.state}, state desc: ${desc}`\n              );\n              errorInviteeIDs.push(errorInvitee.userID);\n            });\n            resolve({\n              ...new ZegoPluginResult('', ''),\n              callID,\n              errorInvitees: errorInviteeIDs,\n            });\n          }\n        })\n        .catch((error: ZIMError) => {\n          reject(error);\n        });\n    });\n  }\n  cancel(invitees: string[], callID: string, config: ZIMCallCancelConfig): Promise<{ code: string, message: string; errorInvitees: string[]; }> {\n    return new Promise((resolve, reject) => {\n      ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance()\n        .callCancel(invitees, callID, config)\n        .then(({ callID: resCallID, errorInvitees }: ZIMCallCancelSentResult) => {\n          this._callIDUsers.delete(callID);\n          if (!errorInvitees || !errorInvitees.length) {\n            zloginfo(`[Core]Cancel invitation done, call id: ${callID}`);\n            resolve({ ...new ZegoPluginResult('', ''), errorInvitees: [] });\n          } else {\n            errorInvitees.forEach((inviteeID) => {\n              zlogwarning(\n                `[Core]Cancel invitation error, invitee id: ${inviteeID}`\n              );\n            });\n            resolve({ ...new ZegoPluginResult('', ''), errorInvitees });\n          }\n        })\n        .catch((error: ZIMError) => {\n          reject(error);\n        });\n    });\n  }\n  accept(callID: string, config: ZIMCallAcceptConfig): Promise<{ code: string, message: string; }> {\n    return new Promise((resolve, reject) => {\n      ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance()\n        .callAccept(callID, config)\n        .then(({ callID: resCallID }: ZIMCallAcceptanceSentResult) => {\n          zloginfo(`[Core]Accept invitation done, call id: ${callID}`);\n          resolve(new ZegoPluginResult());\n        })\n        .catch((error: ZIMError) => {\n          reject(error);\n        });\n    });\n  }\n  reject(callID: string, config: ZIMCallRejectConfig): Promise<{ code: string, message: string; }> {\n    return new Promise((resolve, reject) => {\n      ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance()\n        .callReject(callID, config)\n        .then(({ callID: resCallID }: ZIMCallRejectionSentResult) => {\n          zloginfo(`[Core]Reject invitation done, call id: ${callID}`);\n          this._callIDUsers.delete(callID);\n          resolve(new ZegoPluginResult());\n        })\n        .catch((error: ZIMError) => {\n          reject(error);\n        });\n    });\n  }\n  queryCallList(config: ZIMCallInvitationQueryConfig): Promise<{ callList: ZIMCallInfo[], nextFlag: number; }> {\n    return new Promise((resolve, reject) => {\n        ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance()\n        .queryCallInvitationList(config)\n        .then(({callList, nextFlag: newFlag} : ZIMCallInvitationListQueriedResult) => {\n            zloginfo(`[Core]Query invitation list done, nextFlag: ${newFlag}, calllist: ${callList.length}`);\n            const data = {callList: callList, nextFlag: newFlag};\n            resolve(data);\n        })\n        .catch((error: ZIMError) => {\n            reject(error);\n        })\n    });\n  }\n  // ------- external events register ------\n  onConnectionStateChanged(callbackID: string, callback: (notifyData: { state: ZIMConnectionState }) => void) {\n    if (typeof callback !== 'function') {\n      if (callbackID in this._onConnectionStateChangedCallbackMap) {\n        zloginfo(\n          '[Core][onConnectionStateChanged] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete this._onConnectionStateChangedCallbackMap[callbackID];\n      }\n    } else {\n      this._onConnectionStateChangedCallbackMap[callbackID] = callback;\n    }\n  }\n  onCallInvitationReceived(callbackID: string, callback: (notifyData: {\n    callID: string;\n    inviter: { name: string; id: string; }; type: number; data: string;\n  }) => void) {\n    if (typeof callback !== 'function') {\n      if (callbackID in this._onCallInvitationReceivedCallbackMap) {\n        zloginfo(\n          '[Core][onCallInvitationReceived] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete this._onCallInvitationReceivedCallbackMap[callbackID];\n      }\n    } else {\n      this._onCallInvitationReceivedCallbackMap[callbackID] = callback;\n    }\n  }\n  onCallInvitationCancelled(callbackID: string, callback: (notifyData: {\n    callID: string;\n    inviter: { id: string; name: string; };\n    data: string;\n  }) => void) {\n    if (typeof callback !== 'function') {\n      if (callbackID in this._onCallInvitationCancelledCallbackMap) {\n        zloginfo(\n          '[Core][onCallInvitationCancelled] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete this._onCallInvitationCancelledCallbackMap[callbackID];\n      }\n    } else {\n      this._onCallInvitationCancelledCallbackMap[callbackID] = callback;\n    }\n  }\n  onCallInvitationAccepted(callbackID: string, callback: (notifyData: {\n    callID: string;\n    invitee: { id: string; name: string; };\n    data: string;\n  }) => void) {\n    if (typeof callback !== 'function') {\n      if (callbackID in this._onCallInvitationAcceptedCallbackMap) {\n        zloginfo(\n          '[Core][onCallInvitationAccepted] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete this._onCallInvitationAcceptedCallbackMap[callbackID];\n      }\n    } else {\n      this._onCallInvitationAcceptedCallbackMap[callbackID] = callback;\n    }\n  }\n  onCallInvitationRejected(callbackID: string, callback: (notifyData: {\n    callID: string;\n    invitee: { id: string; name: string; };\n    data: string;\n  }) => void) {\n    if (typeof callback !== 'function') {\n      if (callbackID in this._onCallInvitationRejectedCallbackMap) {\n        zloginfo(\n          '[Core][onCallInvitationRejected] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete this._onCallInvitationRejectedCallbackMap[callbackID];\n      }\n    } else {\n      this._onCallInvitationRejectedCallbackMap[callbackID] = callback;\n    }\n  }\n  onCallInvitationTimeout(callbackID: string, callback: (notifyData: {\n    callID: string;\n    inviter: { id: string; name: string; };\n    data: string;\n  }) => void) {\n    if (typeof callback !== 'function') {\n      if (callbackID in this._onCallInvitationTimeoutCallbackMap) {\n        zloginfo(\n          '[Core][onCallInvitationTimeout] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete this._onCallInvitationTimeoutCallbackMap[callbackID];\n      }\n    } else {\n      this._onCallInvitationTimeoutCallbackMap[callbackID] = callback;\n    }\n  }\n  onCallInviteesAnsweredTimeout(callbackID: string, callback: (notifyData: {\n    callID: string;\n    invitees: { id: string; name: string; }[];\n    data: string;\n  }) => void) {\n    if (typeof callback !== 'function') {\n      if (callbackID in this._onCallInviteesAnsweredTimeoutCallbackMap) {\n        zloginfo(\n          '[Core][onCallInviteesAnsweredTimeout] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete this._onCallInviteesAnsweredTimeoutCallbackMap[callbackID];\n      }\n    } else {\n      this._onCallInviteesAnsweredTimeoutCallbackMap[callbackID] = callback;\n    }\n  }\n}\n"],"mappings":";;;;AAuBA,SAASA,kBAAkB,EAAEC,gBAAgB,QAAQ,YAAY;AACjE,OAAOC,gBAAgB,MAAM,WAAW;AACxC,SAASC,SAAS,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,iBAAiB;AAClE,OAAOC,kCAAkC,MAAM,gCAAgC;AAC/E,OAAOC,4BAA4B,MAAM,wBAAwB;AACjE,OAAOC,mBAAmB,MAAM,+CAA+C;AAE/E,eAAe,MAAMC,uBAAuB,CAAC;EAqC3CC,WAAWA,CAAA,EAAG;IAAAC,eAAA,qBAnCD,CAAC,CAAC;IAAAA,eAAA,mBACJ,KAAK;IAAAA,eAAA,uBACD,IAAIC,GAAG,CAAiB,CAAC;IAAE;IAAAD,eAAA,2BACvBX,kBAAkB,CAACa,YAAY;IAAAF,eAAA,+CAC+D,CAAC,CAAC;IAAAA,eAAA,+CAIpG,CAAC,CAAC;IAAAA,eAAA,gDAKF,CAAC,CAAC;IAAAA,eAAA,+CAKF,CAAC,CAAC;IAAAA,eAAA,+CAKF,CAAC,CAAC;IAAAA,eAAA,8CAKF,CAAC,CAAC;IAAAA,eAAA,oDAKF,CAAC,CAAC;IAAAA,eAAA,+BACM,EAAE;IAEvB,IAAI,CAACF,uBAAuB,CAACK,MAAM,EAAE;MACnCV,QAAQ,CAAC,yDAAyD,CAAC;MACnEK,uBAAuB,CAACK,MAAM,GAAG,IAAI;IACvC;IACA,OAAOL,uBAAuB,CAACK,MAAM;EACvC;EACA,OAAOC,WAAWA,CAAA,EAAG;IACnB,IAAI,CAACN,uBAAuB,CAACK,MAAM,EAAE;MACnCL,uBAAuB,CAACK,MAAM,GAAG,IAAIL,uBAAuB,CAAC,CAAC;IAChE;IACA,OAAOA,uBAAuB,CAACK,MAAM;EACvC;EACA;EACAE,uBAAuBA,CAAA,EAAG;IACxBZ,QAAQ,CAAC,oCAAoC,CAAC;IAC9CI,mBAAmB,CAACS,YAAY,CAAC,CAAC,CAACC,OAAO,CAACH,WAAW,CAAC,CAAC,CAACI,EAAE,CAAC,OAAO,EAAE,CAACC,GAAQ,EAAEC,SAAmB,KAAK;MACtGlB,SAAS,CACN,yBAAwBkB,SAAS,CAACC,IAAK,aAAYD,SAAS,CAACE,OAAQ,GACxE,CAAC;IACH,CAAC,CAAC;IACFf,mBAAmB,CAACS,YAAY,CAAC,CAAC,CAACC,OAAO,CAACH,WAAW,CAAC,CAAC,CAACI,EAAE,CACzD,wBAAwB,EACxB,CAACC,GAAQ,EAAAI,IAAA,KAA6E;MAAA,IAA3E;QAAEC,KAAK;QAAEC,KAAK;QAAEC;MAAqD,CAAC,GAAAH,IAAA;MAC/EpB,QAAQ,CACL,yCAAwCqB,KAAM,WAAUC,KAAM,mBAAkBC,YAAa,EAChG,CAAC;MACD,IAAI,CAACC,gBAAgB,GAAGH,KAAK;MAC7B,IAAI,CAACI,6BAA6B,CAAC;QAAEJ;MAAM,CAAC,CAAC;MAC7C,IAAI,IAAI,CAACG,gBAAgB,KAAK5B,kBAAkB,CAACa,YAAY,EAAE;QAC7DR,WAAW,CAAC,kCAAkC,CAAC;QAC/C;MACF;IACF,CACF,CAAC;IACD;IACAG,mBAAmB,CAACS,YAAY,CAAC,CAAC,CAACC,OAAO,CAACH,WAAW,CAAC,CAAC,CAACI,EAAE,CACzD,wBAAwB,EACxB,CAACC,GAAQ,EAAAU,KAAA,KAAyF;MAAA,IAAvF;QAAEC,MAAM;QAAEC,OAAO;QAAEC,OAAO;QAAEN;MAAqD,CAAC,GAAAG,KAAA;MAC3F1B,QAAQ,CACN,yCAAyC,EACzC2B,MAAM,EACNC,OAAO,EACPC,OAAO,EACPN,YACF,CAAC;MACD,IAAI,IAAI,CAACO,oBAAoB,IAAIH,MAAM,EAAE;QACvC;MACF,CAAC,MAAM;QACL,IAAI,CAACG,oBAAoB,GAAGH,MAAM;MACpC;MACA,IAAI,CAACI,YAAY,CAACC,GAAG,CAACL,MAAM,EAAEC,OAAO,CAAC;MACtCK,OAAO,CAACC,GAAG,CAAC,mFAAmF,EAAEP,MAAM,EAAEJ,YAAY,CAAC;MAEtH,MAAMY,UAAe,GAAG;QAAER,MAAM;QAAEC,OAAO,EAAE;UAAEQ,EAAE,EAAER;QAAQ;MAAE,CAAC;MAC5D,IAAIL,YAAY,EAAE;QAChB,MAAMc,WAAW,GAAGC,IAAI,CAACC,KAAK,CAAChB,YAAY,CAAC;QAC5CY,UAAU,CAACP,OAAO,CAACY,IAAI,GAAGH,WAAW,CAACI,YAAY;QAClDN,UAAU,CAACO,IAAI,GAAGL,WAAW,CAACK,IAAI;QAClCP,UAAU,CAACQ,IAAI,GAAGN,WAAW,CAACM,IAAI;MACpC;MACA,IAAI,CAACC,6BAA6B,CAACT,UAAU,CAAC;IAChD,CACF,CAAC;IACD;IACA/B,mBAAmB,CAACS,YAAY,CAAC,CAAC,CAACC,OAAO,CAACH,WAAW,CAAC,CAAC,CAACI,EAAE,CACzD,yBAAyB,EACzB,CAACC,GAAQ,EAAA6B,KAAA,KAAiF;MAAA,IAA/E;QAAElB,MAAM;QAAEC,OAAO;QAAEL;MAAsD,CAAC,GAAAsB,KAAA;MACnF7C,QAAQ,CACN,0CAA0C,EAC1C2B,MAAM,EACNC,OAAO,EACPL,YACF,CAAC;MACD,IAAI,CAACQ,YAAY,CAACe,MAAM,CAACnB,MAAM,CAAC;MAChC,MAAMQ,UAAU,GAAG;QACjBR,MAAM;QACNC,OAAO,EAAE;UAAEQ,EAAE,EAAER,OAAO;UAAEY,IAAI,EAAE;QAAG,CAAC;QAClCG,IAAI,EAAEpB;MACR,CAAC;MACD,IAAI,CAACwB,8BAA8B,CAACZ,UAAU,CAAC;IACjD,CACF,CAAC;IACD;IACA/B,mBAAmB,CAACS,YAAY,CAAC,CAAC,CAACC,OAAO,CAACH,WAAW,CAAC,CAAC,CAACI,EAAE,CACzD,wBAAwB,EACxB,CAACC,GAAQ,EAAAgC,KAAA,KAAgF;MAAA,IAA9E;QAAErB,MAAM;QAAEsB,OAAO;QAAE1B;MAAqD,CAAC,GAAAyB,KAAA;MAClFhD,QAAQ,CACN,yCAAyC,EACzC2B,MAAM,EACNsB,OAAO,EACP1B,YACF,CAAC;MACD,MAAMY,UAAU,GAAG;QACjBR,MAAM;QACNsB,OAAO,EAAE;UAAEb,EAAE,EAAEa,OAAO;UAAET,IAAI,EAAE;QAAG,CAAC;QAClCG,IAAI,EAAEpB;MACR,CAAC;MACD,IAAI,CAAC2B,6BAA6B,CAACf,UAAU,CAAC;IAChD,CACF,CAAC;IACD;IACA/B,mBAAmB,CAACS,YAAY,CAAC,CAAC,CAACC,OAAO,CAACH,WAAW,CAAC,CAAC,CAACI,EAAE,CACzD,wBAAwB,EACxB,CAACC,GAAQ,EAAAmC,KAAA,KAAgF;MAAA,IAA9E;QAAExB,MAAM;QAAEsB,OAAO;QAAE1B;MAAqD,CAAC,GAAA4B,KAAA;MAClFnD,QAAQ,CACN,yCAAyC,EACzC2B,MAAM,EACNsB,OAAO,EACP1B,YACF,CAAC;MACD,MAAMY,UAAU,GAAG;QACjBR,MAAM;QACNsB,OAAO,EAAE;UAAEb,EAAE,EAAEa,OAAO;UAAET,IAAI,EAAE;QAAG,CAAC;QAClCG,IAAI,EAAEpB;MACR,CAAC;MACD,IAAI,CAAC6B,6BAA6B,CAACjB,UAAU,CAAC;IAChD,CACF,CAAC;IACD;IACA/B,mBAAmB,CAACS,YAAY,CAAC,CAAC,CAACC,OAAO,CAACH,WAAW,CAAC,CAAC,CAACI,EAAE,CAAC,uBAAuB,EAAE,CAACC,GAAQ,EAAAqC,KAAA,KAAwD;MAAA,IAAtD;QAAE1B;MAA8C,CAAC,GAAA0B,KAAA;MAC/IrD,QAAQ,CAAC,wCAAwC,EAAE2B,MAAM,CAAC;MAC1D,MAAMQ,UAAU,GAAG;QACjBR,MAAM;QACNC,OAAO,EAAE;UAAEQ,EAAE,EAAE,IAAI,CAACkB,qBAAqB,CAAC3B,MAAM,CAAC;UAAEa,IAAI,EAAE;QAAG,CAAC;QAC7DG,IAAI,EAAE;MACR,CAAC;MACD,IAAI,CAACY,4BAA4B,CAACpB,UAAU,CAAC;IAC/C,CAAC,CAAC;IACF;IACA/B,mBAAmB,CAACS,YAAY,CAAC,CAAC,CAACC,OAAO,CAACH,WAAW,CAAC,CAAC,CAACI,EAAE,CACzD,6BAA6B,EAC7B,CAACC,GAAQ,EAAAwC,KAAA,KAAwE;MAAA,IAAtE;QAAE7B,MAAM;QAAE8B;MAAsD,CAAC,GAAAD,KAAA;MAC1ExD,QAAQ,CACN,8CAA8C,EAC9C2B,MAAM,EACN8B,QACF,CAAC;MACD,MAAMtB,UAAU,GAAG;QACjBR,MAAM;QACN8B,QAAQ,EAAEA,QAAQ,CAACC,GAAG,CAAET,OAAO,IAAK;UAClC,OAAO;YAAEb,EAAE,EAAEa,OAAO;YAAET,IAAI,EAAE;UAAG,CAAC;QAClC,CAAC,CAAC;QACFG,IAAI,EAAE;MACR,CAAC;MACD,IAAI,CAACgB,kCAAkC,CAACxB,UAAU,CAAC;IACrD,CACF,CAAC;EACH;EACAyB,yBAAyBA,CAAA,EAAG;IAC1B5D,QAAQ,CAAC,uCAAuC,CAAC;IACjDI,mBAAmB,CAACS,YAAY,CAAC,CAAC,CAACC,OAAO,CAACH,WAAW,CAAC,CAAC,CAACkD,GAAG,CAAC,OAAO,CAAC;IACrEzD,mBAAmB,CAACS,YAAY,CAAC,CAAC,CAACC,OAAO,CAACH,WAAW,CAAC,CAAC,CAACkD,GAAG,CAAC,wBAAwB,CAAC;IACtFzD,mBAAmB,CAACS,YAAY,CAAC,CAAC,CAACC,OAAO,CAACH,WAAW,CAAC,CAAC,CAACkD,GAAG,CAAC,wBAAwB,CAAC;IACtFzD,mBAAmB,CAACS,YAAY,CAAC,CAAC,CAACC,OAAO,CAACH,WAAW,CAAC,CAAC,CAACkD,GAAG,CAAC,yBAAyB,CAAC;IACvFzD,mBAAmB,CAACS,YAAY,CAAC,CAAC,CAACC,OAAO,CAACH,WAAW,CAAC,CAAC,CAACkD,GAAG,CAAC,wBAAwB,CAAC;IACtFzD,mBAAmB,CAACS,YAAY,CAAC,CAAC,CAACC,OAAO,CAACH,WAAW,CAAC,CAAC,CAACkD,GAAG,CAAC,wBAAwB,CAAC;IACtFzD,mBAAmB,CAACS,YAAY,CAAC,CAAC,CAACC,OAAO,CAACH,WAAW,CAAC,CAAC,CAACkD,GAAG,CAAC,uBAAuB,CAAC;IACrFzD,mBAAmB,CAACS,YAAY,CAAC,CAAC,CAACC,OAAO,CAACH,WAAW,CAAC,CAAC,CAACkD,GAAG,CAAC,6BAA6B,CAAC;EAC7F;EACA;EACApC,6BAA6BA,CAACU,UAAyC,EAAE;IACvE2B,MAAM,CAACC,IAAI,CAAC,IAAI,CAACC,oCAAoC,CAAC,CAACC,OAAO,CAC3DC,UAAU,IAAK;MACd,IAAI,IAAI,CAACF,oCAAoC,CAACE,UAAU,CAAC,EAAE;QACzD,IAAI,CAACF,oCAAoC,CAACE,UAAU,CAAC,CAAC/B,UAAU,CAAC;MACnE;IACF,CACF,CAAC;EACH;EACAS,6BAA6BA,CAACT,UAK7B,EAAE;IACD2B,MAAM,CAACC,IAAI,CAAC,IAAI,CAACI,oCAAoC,CAAC,CAACF,OAAO,CAC3DC,UAAU,IAAK;MACd,IAAI,IAAI,CAACC,oCAAoC,CAACD,UAAU,CAAC,EAAE;QACzD,IAAI,CAACC,oCAAoC,CAACD,UAAU,CAAC,CAAC/B,UAAU,CAAC;MACnE;IACF,CACF,CAAC;EACH;EACAY,8BAA8BA,CAACZ,UAI9B,EAAE;IACD2B,MAAM,CAACC,IAAI,CAAC,IAAI,CAACK,qCAAqC,CAAC,CAACH,OAAO,CAC5DC,UAAU,IAAK;MACd,IAAI,IAAI,CAACE,qCAAqC,CAACF,UAAU,CAAC,EAAE;QAC1D,IAAI,CAACE,qCAAqC,CAACF,UAAU,CAAC,CAAC/B,UAAU,CAAC;MACpE;IACF,CACF,CAAC;EACH;EACAe,6BAA6BA,CAACf,UAI7B,EAAE;IACD2B,MAAM,CAACC,IAAI,CAAC,IAAI,CAACM,oCAAoC,CAAC,CAACJ,OAAO,CAC3DC,UAAU,IAAK;MACd,IAAI,IAAI,CAACG,oCAAoC,CAACH,UAAU,CAAC,EAAE;QACzD,IAAI,CAACG,oCAAoC,CAACH,UAAU,CAAC,CAAC/B,UAAU,CAAC;MACnE;IACF,CACF,CAAC;EACH;EACAiB,6BAA6BA,CAACjB,UAI7B,EAAE;IACD2B,MAAM,CAACC,IAAI,CAAC,IAAI,CAACO,oCAAoC,CAAC,CAACL,OAAO,CAC3DC,UAAU,IAAK;MACd,IAAI,IAAI,CAACI,oCAAoC,CAACJ,UAAU,CAAC,EAAE;QACzD,IAAI,CAACI,oCAAoC,CAACJ,UAAU,CAAC,CAAC/B,UAAU,CAAC;MACnE;IACF,CACF,CAAC;EACH;EACAoB,4BAA4BA,CAACpB,UAI5B,EAAE;IACD2B,MAAM,CAACC,IAAI,CAAC,IAAI,CAACQ,mCAAmC,CAAC,CAACN,OAAO,CAC1DC,UAAU,IAAK;MACd,IAAI,IAAI,CAACK,mCAAmC,CAACL,UAAU,CAAC,EAAE;QACxD,IAAI,CAACK,mCAAmC,CAACL,UAAU,CAAC,CAAC/B,UAAU,CAAC;MAClE;IACF,CACF,CAAC;EACH;EACAwB,kCAAkCA,CAACxB,UAIlC,EAAE;IACD2B,MAAM,CAACC,IAAI,CAAC,IAAI,CAACS,yCAAyC,CAAC,CAACP,OAAO,CAChEC,UAAU,IAAK;MACd,IAAI,IAAI,CAACM,yCAAyC,CAACN,UAAU,CAAC,EAAE;QAC9D,IAAI,CAACM,yCAAyC,CAACN,UAAU,CAAC,CACxD/B,UACF,CAAC;MACH;IACF,CACF,CAAC;EACH;EACA;EACAsC,UAAUA,CAAA,EAAG;IACX,IAAI,CAACC,mBAAmB,CAAC,CAAC;EAC5B;EACAA,mBAAmBA,CAAA,EAAG;IACpB,IAAI,CAACC,QAAQ,GAAG,KAAK;IACrB,IAAI,CAACC,UAAU,GAAG,CAAC,CAAgB;IACnC,IAAI,CAAC7C,YAAY,CAAC8C,KAAK,CAAC,CAAC;IACzB,IAAI,CAACrD,gBAAgB,GAAG5B,kBAAkB,CAACa,YAAY;EACzD;EACA6C,qBAAqBA,CAAC3B,MAAc,EAAE;IACpC,OAAO,IAAI,CAACI,YAAY,CAAC+C,GAAG,CAACnD,MAAM,CAAC;EACtC;EACAoD,aAAaA,CAAA,EAAG;IACd,IAAI,CAACnB,yBAAyB,CAAC,CAAC;IAChC,IAAI,CAAChD,uBAAuB,CAAC,CAAC;IAC9B;IACAV,kCAAkC,CAACS,WAAW,CAAC,CAAC,CAACiD,yBAAyB,CAAC,CAAC;IAC5E1D,kCAAkC,CAACS,WAAW,CAAC,CAAC,CAACC,uBAAuB,CAAC,CAAC;IAC1ET,4BAA4B,CAACQ,WAAW,CAAC,CAAC,CAACiD,yBAAyB,CAAC,CAAC;IACtEzD,4BAA4B,CAACQ,WAAW,CAAC,CAAC,CAACC,uBAAuB,CAAC,CAAC;EACtE;EACA;EACAoE,YAAYA,CAAA,EAAG;IACb,OAAO,IAAI,CAACJ,UAAU;EACxB;EACAK,iBAAiBA,CAACC,MAAc,EAAE;IAChC,IAAIvD,MAAM,GAAG,EAAE;IACfwD,KAAK,CAACC,IAAI,CAAC,IAAI,CAACrD,YAAY,CAACgC,IAAI,CAAC,CAAC,CAAC,CAACE,OAAO,CAAEoB,GAAG,IAAK;MACpD,MAAMC,KAAK,GAAG,IAAI,CAACvD,YAAY,CAAC+C,GAAG,CAACO,GAAG,CAAC;MACxC,IAAIH,MAAM,KAAKI,KAAK,EAAE;QACpB3D,MAAM,GAAG0D,GAAG;QACZrF,QAAQ,CAAC,yBAAyB,EAAEkF,MAAM,EAAE,IAAI,CAACnD,YAAY,EAAEJ,MAAM,CAAC;MACxE;IACF,CAAC,CAAC;IACF,OAAOA,MAAM;EACf;EACA;EACA4D,cAAcA,CAAA,EAAG;IACf,OAAOnF,mBAAmB,CAACS,YAAY,CAAC,CAAC,CAACC,OAAO,CAACH,WAAW,CAAC,CAAC;EACjE;EACA6E,UAAUA,CAAA,EAAoB;IAC5B,OAAOpF,mBAAmB,CAACS,YAAY,CAAC,CAAC,CAACC,OAAO,CAAC0E,UAAU,CAAC,CAAC;EAChE;EACAC,MAAMA,CAACC,SAAuB,EAAE;IAC9B,IAAI,CAACtF,mBAAmB,CAACS,YAAY,CAAC,CAAC,CAACC,OAAO,CAACH,WAAW,CAAC,CAAC,EAAE;MAC7D,MAAMK,GAAG,GAAGZ,mBAAmB,CAACS,YAAY,CAAC,CAAC,CAACC,OAAO,CAAC2E,MAAM,CAACC,SAAS,CAAC;MACxE,IAAI,CAAC1E,GAAG,EAAE;QACRjB,SAAS,CAAC,yBAAyB,CAAC;MACtC,CAAC,MAAM;QACLC,QAAQ,CAAC,2BAA2B,CAAC;QACrC,IAAI,CAAC+E,aAAa,CAAC,CAAC;MACtB;IACF,CAAC,MAAM;MACL9E,WAAW,CAAC,wBAAwB,CAAC;MACrC,IAAI,CAAC8E,aAAa,CAAC,CAAC;IACtB;EACF;EACAY,KAAKA,CAACC,QAAqB,EAA6B;IAAA,IAA3BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;IACrC,OAAO,IAAIG,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtC,IAAI,CAAC,IAAI,CAACxB,QAAQ,EAAE;QAClBvE,mBAAmB,CAACS,YAAY,CAAC,CAAC,CAACC,OAAO,CAACH,WAAW,CAAC,CAAC,CACrDgF,KAAK,CAACC,QAAQ,EAAEC,KAAK,CAAC,CACtBO,IAAI,CAAC,MAAM;UACVpG,QAAQ,CAAC,sBAAsB,CAAC;UAChC,IAAI,CAAC4E,UAAU,GAAGgB,QAAQ;UAC1B,IAAI,CAACjB,QAAQ,GAAG,IAAI;UACpBuB,OAAO,CAAC,CAAC;QACX,CAAC,CAAC,CAACG,KAAK,CAAEC,KAAe,IAAK;UAC5B,IAAIA,KAAK,CAACpF,IAAI,IAAI,OAAO,EAAE;YACzBlB,QAAQ,CAAC,8BAA8B,EAAEsG,KAAK,CAAC;YAC/CJ,OAAO,CAAC,CAAC;UACX,CAAC,MAAM;YACLC,MAAM,CAACG,KAAK,CAAC;UACf;QACF,CAAC,CAAC;MACN,CAAC,MAAM;QACLtG,QAAQ,CAAC,8BAA8B,CAAC;QACxCkG,OAAO,CAAC,CAAC;MACX;IACF,CAAC,CAAC;EACJ;EACAK,MAAMA,CAAA,EAAkB;IACtB,OAAOnG,mBAAmB,CAACS,YAAY,CAAC,CAAC,CAACC,OAAO,CAACH,WAAW,CAAC,CAAC,CAC5D4F,MAAM,CAAC,CAAC,CACRH,IAAI,CAAC,MAAM;MACVpG,QAAQ,CAAC,uBAAuB,CAAC;MACjC,IAAI,CAAC0E,mBAAmB,CAAC,CAAC;MAC1B;MACAxE,kCAAkC,CAACS,WAAW,CAAC,CAAC,CAAC8D,UAAU,CAAC,CAAC;IAC/D,CAAC,CAAC;EACN;EACA+B,OAAOA,CAAA,EAAG;IACRpG,mBAAmB,CAACS,YAAY,CAAC,CAAC,CAACC,OAAO,CAACH,WAAW,CAAC,CAAC,CAAC6F,OAAO,CAAC,CAAC;IAClExG,QAAQ,CAAC,wBAAwB,CAAC;IAClC,IAAI,CAACyE,UAAU,CAAC,CAAC;EACnB;EACAgC,MAAMA,CAAChD,QAAkB,EAAEiD,MAA2B,EAAwF;IAC5I,OAAO,IAAIT,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtClE,OAAO,CAAC0E,IAAI,CAAClD,QAAQ,CAAC;MACtBxB,OAAO,CAAC0E,IAAI,CAACD,MAAM,CAAC;MACpBtG,mBAAmB,CAACS,YAAY,CAAC,CAAC,CAACC,OAAO,CAACH,WAAW,CAAC,CAAC,CACrDiG,UAAU,CAACnD,QAAQ,EAAEiD,MAAM,CAAC,CAC5BN,IAAI,CAACS,KAAA,IAAqE;QAAA,IAApE;UAAElF,MAAM;UAAEE,OAAO;UAAEiF;QAA2C,CAAC,GAAAD,KAAA;QACpE,IAAI,CAAC9E,YAAY,CAACC,GAAG,CAACL,MAAM,EAAE,IAAI,CAACiD,UAAU,CAACM,MAAM,CAAC;QACrD,IAAI,CAAC4B,aAAa,IAAI,CAACA,aAAa,CAACf,MAAM,EAAE;UAC3C/F,QAAQ,CAAE,+BAA8B2B,MAAO,EAAC,CAAC;UACjDuE,OAAO,CAAC;YACN,GAAG,IAAIpG,gBAAgB,CAAC,EAAE,EAAE,EAAE,CAAC;YAC/B6B,MAAM;YACNmF,aAAa,EAAE;UACjB,CAAC,CAAC;QACJ,CAAC,MAAM;UACL,MAAMC,eAAyB,GAAG,EAAE;UACpCD,aAAa,CAAC7C,OAAO,CAAE+C,YAAY,IAAK;YACtC,MAAMC,IAAI,GACRD,YAAY,CAAC3F,KAAK,KAAKxB,gBAAgB,CAACqH,OAAO,GAC3C,QAAQ,GACRF,YAAY,CAAC3F,KAAK,KAAKxB,gBAAgB,CAACsH,QAAQ,GAChD,UAAU,GACV,EAAE;YACRlH,WAAW,CACR,mCAAkC+G,YAAY,CAAC9B,MAAO,oBAAmB8B,YAAY,CAAC3F,KAAM,iBAAgB4F,IAAK,EACpH,CAAC;YACDF,eAAe,CAACK,IAAI,CAACJ,YAAY,CAAC9B,MAAM,CAAC;UAC3C,CAAC,CAAC;UACFgB,OAAO,CAAC;YACN,GAAG,IAAIpG,gBAAgB,CAAC,EAAE,EAAE,EAAE,CAAC;YAC/B6B,MAAM;YACNmF,aAAa,EAAEC;UACjB,CAAC,CAAC;QACJ;MACF,CAAC,CAAC,CACDV,KAAK,CAAEC,KAAe,IAAK;QAC1BH,MAAM,CAACG,KAAK,CAAC;MACf,CAAC,CAAC;IACN,CAAC,CAAC;EACJ;EACAe,MAAMA,CAAC5D,QAAkB,EAAE9B,MAAc,EAAE+E,MAA2B,EAAwE;IAC5I,OAAO,IAAIT,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtC/F,mBAAmB,CAACS,YAAY,CAAC,CAAC,CAACC,OAAO,CAACH,WAAW,CAAC,CAAC,CACrD2G,UAAU,CAAC7D,QAAQ,EAAE9B,MAAM,EAAE+E,MAAM,CAAC,CACpCN,IAAI,CAACmB,KAAA,IAAmE;QAAA,IAAlE;UAAE5F,MAAM,EAAE6F,SAAS;UAAEV;QAAuC,CAAC,GAAAS,KAAA;QAClE,IAAI,CAACxF,YAAY,CAACe,MAAM,CAACnB,MAAM,CAAC;QAChC,IAAI,CAACmF,aAAa,IAAI,CAACA,aAAa,CAACf,MAAM,EAAE;UAC3C/F,QAAQ,CAAE,0CAAyC2B,MAAO,EAAC,CAAC;UAC5DuE,OAAO,CAAC;YAAE,GAAG,IAAIpG,gBAAgB,CAAC,EAAE,EAAE,EAAE,CAAC;YAAEgH,aAAa,EAAE;UAAG,CAAC,CAAC;QACjE,CAAC,MAAM;UACLA,aAAa,CAAC7C,OAAO,CAAEwD,SAAS,IAAK;YACnCxH,WAAW,CACR,8CAA6CwH,SAAU,EAC1D,CAAC;UACH,CAAC,CAAC;UACFvB,OAAO,CAAC;YAAE,GAAG,IAAIpG,gBAAgB,CAAC,EAAE,EAAE,EAAE,CAAC;YAAEgH;UAAc,CAAC,CAAC;QAC7D;MACF,CAAC,CAAC,CACDT,KAAK,CAAEC,KAAe,IAAK;QAC1BH,MAAM,CAACG,KAAK,CAAC;MACf,CAAC,CAAC;IACN,CAAC,CAAC;EACJ;EACAoB,MAAMA,CAAC/F,MAAc,EAAE+E,MAA2B,EAA+C;IAC/F,OAAO,IAAIT,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtC/F,mBAAmB,CAACS,YAAY,CAAC,CAAC,CAACC,OAAO,CAACH,WAAW,CAAC,CAAC,CACrDgH,UAAU,CAAChG,MAAM,EAAE+E,MAAM,CAAC,CAC1BN,IAAI,CAACwB,MAAA,IAAwD;QAAA,IAAvD;UAAEjG,MAAM,EAAE6F;QAAuC,CAAC,GAAAI,MAAA;QACvD5H,QAAQ,CAAE,0CAAyC2B,MAAO,EAAC,CAAC;QAC5DuE,OAAO,CAAC,IAAIpG,gBAAgB,CAAC,CAAC,CAAC;MACjC,CAAC,CAAC,CACDuG,KAAK,CAAEC,KAAe,IAAK;QAC1BH,MAAM,CAACG,KAAK,CAAC;MACf,CAAC,CAAC;IACN,CAAC,CAAC;EACJ;EACAH,MAAMA,CAACxE,MAAc,EAAE+E,MAA2B,EAA+C;IAC/F,OAAO,IAAIT,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtC/F,mBAAmB,CAACS,YAAY,CAAC,CAAC,CAACC,OAAO,CAACH,WAAW,CAAC,CAAC,CACrDkH,UAAU,CAAClG,MAAM,EAAE+E,MAAM,CAAC,CAC1BN,IAAI,CAAC0B,MAAA,IAAuD;QAAA,IAAtD;UAAEnG,MAAM,EAAE6F;QAAsC,CAAC,GAAAM,MAAA;QACtD9H,QAAQ,CAAE,0CAAyC2B,MAAO,EAAC,CAAC;QAC5D,IAAI,CAACI,YAAY,CAACe,MAAM,CAACnB,MAAM,CAAC;QAChCuE,OAAO,CAAC,IAAIpG,gBAAgB,CAAC,CAAC,CAAC;MACjC,CAAC,CAAC,CACDuG,KAAK,CAAEC,KAAe,IAAK;QAC1BH,MAAM,CAACG,KAAK,CAAC;MACf,CAAC,CAAC;IACN,CAAC,CAAC;EACJ;EACAyB,aAAaA,CAACrB,MAAoC,EAA2D;IAC3G,OAAO,IAAIT,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACpC/F,mBAAmB,CAACS,YAAY,CAAC,CAAC,CAACC,OAAO,CAACH,WAAW,CAAC,CAAC,CACvDqH,uBAAuB,CAACtB,MAAM,CAAC,CAC/BN,IAAI,CAAC6B,MAAA,IAAwE;QAAA,IAAvE;UAACC,QAAQ;UAAEC,QAAQ,EAAEC;QAA4C,CAAC,GAAAH,MAAA;QACrEjI,QAAQ,CAAE,+CAA8CoI,OAAQ,eAAcF,QAAQ,CAACnC,MAAO,EAAC,CAAC;QAChG,MAAMpD,IAAI,GAAG;UAACuF,QAAQ,EAAEA,QAAQ;UAAEC,QAAQ,EAAEC;QAAO,CAAC;QACpDlC,OAAO,CAACvD,IAAI,CAAC;MACjB,CAAC,CAAC,CACD0D,KAAK,CAAEC,KAAe,IAAK;QACxBH,MAAM,CAACG,KAAK,CAAC;MACjB,CAAC,CAAC;IACN,CAAC,CAAC;EACJ;EACA;EACA+B,wBAAwBA,CAACnE,UAAkB,EAAEoE,QAA6D,EAAE;IAC1G,IAAI,OAAOA,QAAQ,KAAK,UAAU,EAAE;MAClC,IAAIpE,UAAU,IAAI,IAAI,CAACF,oCAAoC,EAAE;QAC3DhE,QAAQ,CACN,yDAAyD,EACzDkE,UAAU,EACV,6CACF,CAAC;QACD,OAAO,IAAI,CAACF,oCAAoC,CAACE,UAAU,CAAC;MAC9D;IACF,CAAC,MAAM;MACL,IAAI,CAACF,oCAAoC,CAACE,UAAU,CAAC,GAAGoE,QAAQ;IAClE;EACF;EACAC,wBAAwBA,CAACrE,UAAkB,EAAEoE,QAGnC,EAAE;IACV,IAAI,OAAOA,QAAQ,KAAK,UAAU,EAAE;MAClC,IAAIpE,UAAU,IAAI,IAAI,CAACC,oCAAoC,EAAE;QAC3DnE,QAAQ,CACN,yDAAyD,EACzDkE,UAAU,EACV,6CACF,CAAC;QACD,OAAO,IAAI,CAACC,oCAAoC,CAACD,UAAU,CAAC;MAC9D;IACF,CAAC,MAAM;MACL,IAAI,CAACC,oCAAoC,CAACD,UAAU,CAAC,GAAGoE,QAAQ;IAClE;EACF;EACAE,yBAAyBA,CAACtE,UAAkB,EAAEoE,QAIpC,EAAE;IACV,IAAI,OAAOA,QAAQ,KAAK,UAAU,EAAE;MAClC,IAAIpE,UAAU,IAAI,IAAI,CAACE,qCAAqC,EAAE;QAC5DpE,QAAQ,CACN,0DAA0D,EAC1DkE,UAAU,EACV,6CACF,CAAC;QACD,OAAO,IAAI,CAACE,qCAAqC,CAACF,UAAU,CAAC;MAC/D;IACF,CAAC,MAAM;MACL,IAAI,CAACE,qCAAqC,CAACF,UAAU,CAAC,GAAGoE,QAAQ;IACnE;EACF;EACAG,wBAAwBA,CAACvE,UAAkB,EAAEoE,QAInC,EAAE;IACV,IAAI,OAAOA,QAAQ,KAAK,UAAU,EAAE;MAClC,IAAIpE,UAAU,IAAI,IAAI,CAACG,oCAAoC,EAAE;QAC3DrE,QAAQ,CACN,yDAAyD,EACzDkE,UAAU,EACV,6CACF,CAAC;QACD,OAAO,IAAI,CAACG,oCAAoC,CAACH,UAAU,CAAC;MAC9D;IACF,CAAC,MAAM;MACL,IAAI,CAACG,oCAAoC,CAACH,UAAU,CAAC,GAAGoE,QAAQ;IAClE;EACF;EACAI,wBAAwBA,CAACxE,UAAkB,EAAEoE,QAInC,EAAE;IACV,IAAI,OAAOA,QAAQ,KAAK,UAAU,EAAE;MAClC,IAAIpE,UAAU,IAAI,IAAI,CAACI,oCAAoC,EAAE;QAC3DtE,QAAQ,CACN,yDAAyD,EACzDkE,UAAU,EACV,6CACF,CAAC;QACD,OAAO,IAAI,CAACI,oCAAoC,CAACJ,UAAU,CAAC;MAC9D;IACF,CAAC,MAAM;MACL,IAAI,CAACI,oCAAoC,CAACJ,UAAU,CAAC,GAAGoE,QAAQ;IAClE;EACF;EACAK,uBAAuBA,CAACzE,UAAkB,EAAEoE,QAIlC,EAAE;IACV,IAAI,OAAOA,QAAQ,KAAK,UAAU,EAAE;MAClC,IAAIpE,UAAU,IAAI,IAAI,CAACK,mCAAmC,EAAE;QAC1DvE,QAAQ,CACN,wDAAwD,EACxDkE,UAAU,EACV,6CACF,CAAC;QACD,OAAO,IAAI,CAACK,mCAAmC,CAACL,UAAU,CAAC;MAC7D;IACF,CAAC,MAAM;MACL,IAAI,CAACK,mCAAmC,CAACL,UAAU,CAAC,GAAGoE,QAAQ;IACjE;EACF;EACAM,6BAA6BA,CAAC1E,UAAkB,EAAEoE,QAIxC,EAAE;IACV,IAAI,OAAOA,QAAQ,KAAK,UAAU,EAAE;MAClC,IAAIpE,UAAU,IAAI,IAAI,CAACM,yCAAyC,EAAE;QAChExE,QAAQ,CACN,8DAA8D,EAC9DkE,UAAU,EACV,6CACF,CAAC;QACD,OAAO,IAAI,CAACM,yCAAyC,CAACN,UAAU,CAAC;MACnE;IACF,CAAC,MAAM;MACL,IAAI,CAACM,yCAAyC,CAACN,UAAU,CAAC,GAAGoE,QAAQ;IACvE;EACF;AACF;AAACO,MAAA,GApmBoBxI,uBAAuB;AAAAE,eAAA,CAAvBF,uBAAuB"}
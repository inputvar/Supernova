{"version":3,"names":["zlogerror","zloginfo","ZegoPluginResult","ZegoPluginUserInRoomAttributesCore","ZegoUIKitCorePlugin","ZegoPluginRoomPropertiesCore","constructor","_defineProperty","shared","getInstance","_registerEngineCallback","getZIMPlugin","default","on","zim","_ref","roomID","infos","forEach","info","_notifyRoomPropertiesUpdated","_ref2","_ref3","messageList","fromConversationID","_notifyInRoomTextMessageReceived","_unregisterEngineCallback","off","notifyData","Object","keys","_onRoomPropertyUpdatedCallbackMap","callbackID","_onInRoomTextMessageReceivedCallbackMap","updateRoomProperty","attributes","config","Promise","reject","getRoomBaseInfo","resolve","setRoomAttributes","then","_ref4","resRoomID","errorKeys","catch","error","code","message","deleteRoomProperties","deleteRoomAttributes","_ref5","beginRoomPropertiesBatchOperation","beginRoomAttributesBatchOperation","endRoomPropertiesBatchOperation","endRoomAttributesBatchOperation","_ref6","queryRoomProperties","queryRoomAllAttributes","_ref7","roomAttributes","onRoomPropertyUpdated","callback","onInRoomTextMessageReceived","_class"],"sources":["room_properties_core.ts"],"sourcesContent":["import type {\n  ZIMMessage,\n  ZIMRoomAttributesBatchOperationConfig,\n  ZIMRoomAttributesDeleteConfig,\n  ZIMRoomAttributesSetConfig,\n  ZIMRoomAttributesUpdateInfo,\n  ZIMEventOfRoomAttributesUpdatedResult,\n  ZIMEventOfReceiveConversationMessageResult,\n  ZIMRoomAttributesOperatedResult,\n  ZIMRoomAttributesBatchOperatedResult,\n  ZIMRoomAttributesQueriedResult,\n  ZIMError,\n} from 'zego-zim-react-native';\nimport { zlogerror, zloginfo } from '../utils/logger';\nimport ZegoPluginResult from './defines';\nimport ZegoPluginUserInRoomAttributesCore from './user_in_room_attributes_core';\nimport ZegoUIKitCorePlugin from \"../../components/internal/ZegoUIKitCorePlugin\";\n\nexport default class ZegoPluginRoomPropertiesCore {\n  static shared: ZegoPluginRoomPropertiesCore;\n  _onRoomPropertyUpdatedCallbackMap: { [index: string]: (notifyData: ZIMRoomAttributesUpdateInfo) => void } = {};\n  _onInRoomTextMessageReceivedCallbackMap: { [index: string]: (notifyData: { messageList: ZIMMessage[]; fromConversationID: string }) => void } = {};\n  constructor() {\n    if (!ZegoPluginRoomPropertiesCore.shared) {\n      ZegoPluginRoomPropertiesCore.shared = this;\n    }\n    return ZegoPluginRoomPropertiesCore.shared;\n  }\n  static getInstance() {\n    if (!ZegoPluginRoomPropertiesCore.shared) {\n      ZegoPluginRoomPropertiesCore.shared = new ZegoPluginRoomPropertiesCore();\n    }\n    return ZegoPluginRoomPropertiesCore.shared;\n  }\n  // ------- internal events register ------\n  _registerEngineCallback() {\n    ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance().on('roomAttributesUpdated', (zim: any, { roomID, infos }: ZIMEventOfRoomAttributesUpdatedResult) => {\n      zloginfo(\n        `[ZegoPluginRoomPropertiesCore]NotifyRoomPropertiesUpdated`,\n        infos\n      );\n      infos.forEach((info) => {\n        this._notifyRoomPropertiesUpdated(info);\n      });\n    });\n    ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance().on(\n      'roomAttributesBatchUpdated',\n      (zim: any, { roomID, infos }: ZIMEventOfRoomAttributesUpdatedResult) => {\n        zloginfo(\n          `[ZegoPluginRoomPropertiesCore]NotifyRoomPropertiesUpdated`,\n          infos\n        );\n        infos.forEach((info) => {\n          this._notifyRoomPropertiesUpdated(info);\n        });\n      }\n    );\n    ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance().on('receiveRoomMessage', (zim: any, { messageList, fromConversationID }: ZIMEventOfReceiveConversationMessageResult) => {\n      this._notifyInRoomTextMessageReceived({ messageList, fromConversationID });\n    });\n\n    zloginfo('[ZegoPluginRoomPropertiesCore]Register callback for ZIM...');\n  }\n  _unregisterEngineCallback() {\n    zloginfo('[ZegoPluginRoomPropertiesCore]Unregister callback from ZIM...');\n    ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance().off('roomAttributesUpdated');\n    ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance().off('roomAttributesBatchUpdated');\n    ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance().off('receiveRoomMessage');\n  }\n  // ------- internal events exec ------\n  _notifyRoomPropertiesUpdated(notifyData: ZIMRoomAttributesUpdateInfo) {\n    Object.keys(this._onRoomPropertyUpdatedCallbackMap).forEach(\n      (callbackID) => {\n        if (this._onRoomPropertyUpdatedCallbackMap[callbackID]) {\n          this._onRoomPropertyUpdatedCallbackMap[callbackID](notifyData);\n        }\n      }\n    );\n  }\n  _notifyInRoomTextMessageReceived(notifyData: { messageList: ZIMMessage[]; fromConversationID: string }) {\n    Object.keys(this._onInRoomTextMessageReceivedCallbackMap).forEach(\n      (callbackID) => {\n        if (this._onInRoomTextMessageReceivedCallbackMap[callbackID]) {\n          this._onInRoomTextMessageReceivedCallbackMap[callbackID](notifyData);\n        }\n      }\n    );\n  }\n  // ------- external method ------\n  updateRoomProperty(attributes: Record<string, string>, config: ZIMRoomAttributesSetConfig) {\n    if (!ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance()) {\n      zlogerror('[ZegoPluginRoomPropertiesCore]Please initialize it first.');\n      return Promise.reject();\n    }\n    const roomID =\n      ZegoPluginUserInRoomAttributesCore.getInstance().getRoomBaseInfo().roomID;\n    return new Promise((resolve, reject) => {\n      ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance()\n        .setRoomAttributes(attributes, roomID, config)\n        .then(({ roomID: resRoomID, errorKeys }: ZIMRoomAttributesOperatedResult) => {\n          zloginfo(\n            `[ZegoPluginRoomPropertiesCore]Update the room properties successfully.`\n          );\n          resolve({ ...new ZegoPluginResult('', ''), errorKeys });\n        })\n        .catch((error: ZIMError) => {\n          zlogerror(\n            `[ZegoPluginRoomPropertiesCore]Failed to update room properties, code: ${error.code}, message: ${error.message}`\n          );\n          reject(error);\n        });\n    });\n  }\n  deleteRoomProperties(keys: string[], config: ZIMRoomAttributesDeleteConfig) {\n    if (!ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance()) {\n      zlogerror('[ZegoPluginRoomPropertiesCore]Please initialize it first.');\n      return Promise.reject();\n    }\n    const roomID =\n      ZegoPluginUserInRoomAttributesCore.getInstance().getRoomBaseInfo().roomID;\n    return new Promise((resolve, reject) => {\n      ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance()\n        .deleteRoomAttributes(keys, roomID, config)\n        .then(({ roomID: resRoomID, errorKeys }: ZIMRoomAttributesOperatedResult) => {\n          zloginfo(\n            `[ZegoPluginRoomPropertiesCore]Delete the room properties successfully.`\n          );\n          resolve({ ...new ZegoPluginResult('', ''), errorKeys });\n        })\n        .catch((error: ZIMError) => {\n          zlogerror(\n            `[ZegoPluginRoomPropertiesCore]Failed to delete room properties, code: ${error.code}, message: ${error.message}`\n          );\n          reject(error);\n        });\n    });\n  }\n  beginRoomPropertiesBatchOperation(config: ZIMRoomAttributesBatchOperationConfig) {\n    if (!ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance()) {\n      zlogerror('[ZegoPluginRoomPropertiesCore]Please initialize it first.');\n      return Promise.reject();\n    }\n    const roomID =\n      ZegoPluginUserInRoomAttributesCore.getInstance().getRoomBaseInfo().roomID;\n    ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance().beginRoomAttributesBatchOperation(roomID, config);\n    zloginfo(\n      `[ZegoPluginRoomPropertiesCore]Begin batch operate room properties successfully.`\n    );\n  }\n  endRoomPropertiesBatchOperation() {\n    if (!ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance()) {\n      zlogerror('[ZegoPluginRoomPropertiesCore]Please initialize it first.');\n      return Promise.reject();\n    }\n    const roomID =\n      ZegoPluginUserInRoomAttributesCore.getInstance().getRoomBaseInfo().roomID;\n    return new Promise((resolve, reject) => {\n      ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance()\n        .endRoomAttributesBatchOperation(roomID)\n        .then(({ roomID: resRoomID }: ZIMRoomAttributesBatchOperatedResult) => {\n          zloginfo(\n            `[ZegoPluginRoomPropertiesCore]End batch operate room properties successfully.`\n          );\n          resolve(new ZegoPluginResult('', ''));\n        })\n        .catch((error: ZIMError) => {\n          zlogerror(\n            `[ZegoPluginRoomPropertiesCore]Failed to end batch operate room properties, code: ${error.code}, message: ${error.message}`\n          );\n          reject(error);\n        });\n    });\n  }\n  queryRoomProperties() {\n    if (!ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance()) {\n      zlogerror('[ZegoPluginRoomPropertiesCore]Please initialize it first.');\n      return Promise.reject();\n    }\n    const roomID =\n      ZegoPluginUserInRoomAttributesCore.getInstance().getRoomBaseInfo().roomID;\n    return new Promise((resolve, reject) => {\n      ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance()\n        .queryRoomAllAttributes(roomID)\n        .then(({ roomID: resRoomID, roomAttributes }: ZIMRoomAttributesQueriedResult) => {\n          zloginfo(\n            `[ZegoPluginRoomPropertiesCore]Query room all attributes successfully.`\n          );\n          resolve({ roomAttributes, ...new ZegoPluginResult('', '') });\n        })\n        .catch((error: ZIMError) => {\n          zlogerror(\n            `[ZegoPluginRoomPropertiesCore]Failed to query room all properties, code: ${error.code}, message: ${error.message}`\n          );\n          reject(error);\n        });\n    });\n  }\n  onRoomPropertyUpdated(callbackID: string, callback: (notifyData: ZIMRoomAttributesUpdateInfo) => void) {\n    if (!ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance()) {\n      zlogerror('[ZegoPluginRoomPropertiesCore]Please initialize it first.');\n    }\n    if (typeof callback !== 'function') {\n      if (callbackID in this._onRoomPropertyUpdatedCallbackMap) {\n        zloginfo(\n          '[Core][onRoomPropertyUpdated] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete this._onRoomPropertyUpdatedCallbackMap[callbackID];\n      }\n    } else {\n      this._onRoomPropertyUpdatedCallbackMap[callbackID] = callback;\n    }\n  }\n  onInRoomTextMessageReceived(callbackID: string, callback: (notifyData: { messageList: ZIMMessage[]; fromConversationID: string }) => void) {\n    if (!ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance()) {\n      zlogerror('[ZegoPluginRoomPropertiesCore]Please initialize it first.');\n    }\n    if (typeof callback !== 'function') {\n      if (callbackID in this._onInRoomTextMessageReceivedCallbackMap) {\n        zloginfo(\n          '[Core][onRoomPropertyUpdated] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete this._onInRoomTextMessageReceivedCallbackMap[callbackID];\n      }\n    } else {\n      this._onInRoomTextMessageReceivedCallbackMap[callbackID] = callback;\n    }\n  }\n}\n"],"mappings":"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"}
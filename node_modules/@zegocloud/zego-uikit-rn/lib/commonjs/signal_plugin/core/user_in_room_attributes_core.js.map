{"version":3,"names":["_logger","require","_defines","_interopRequireDefault","_ZegoUIKitCorePlugin","_class","obj","__esModule","default","_defineProperty","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","ZegoPluginUserInRoomAttributesCore","constructor","shared","getInstance","_registerEngineCallback","ZegoUIKitCorePlugin","getZIMPlugin","on","zim","_ref","roomID","infos","operatedInfo","zloginfo","_notifyUsersInRoomAttributesUpdated","map","info","attributesInfo","editor","userID","_unregisterEngineCallback","off","_resetData","_resetDataForLeaveRoom","_roomBaseInfo","_isJoinRoom","notifyData","keys","_onUsersInRoomAttributesUpdatedCallbackMap","forEach","callbackID","joinRoom","zlogerror","Promise","reject","resolve","enterRoom","roomName","then","_ref2","roomInfo","baseInfo","ZegoPluginResult","catch","error","code","message","leaveRoom","getRoomBaseInfo","setUsersInRoomAttributes","attributes","userIDs","setRoomMembersAttributes","isDeleteAfterOwnerLeft","_ref3","errorUserList","queryUsersInRoomAttributes","config","queryRoomMemberAttributesList","_ref4","nextFlag","resNextFlag","params","onUsersInRoomAttributesUpdated","callback","exports"],"sources":["user_in_room_attributes_core.ts"],"sourcesContent":["import type {\n  ZIMRoomInfo,\n  ZIMRoomMemberAttributesInfo,\n  ZIMRoomMemberAttributesQueryConfig,\n  ZIMEventOfRoomMembersAttributesUpdatedResult,\n  ZIMRoomEnteredResult,\n  ZIMError,\n  ZIMRoomMembersAttributesOperatedResult,\n  ZIMRoomMemberAttributesListQueriedResult,\n} from 'zego-zim-react-native';\nimport { zlogerror, zloginfo } from '../utils/logger';\nimport ZegoPluginResult from './defines';\nimport ZegoUIKitCorePlugin from \"../../components/internal/ZegoUIKitCorePlugin\";\n\nexport default class ZegoPluginUserInRoomAttributesCore {\n  static shared: ZegoPluginUserInRoomAttributesCore;\n  _isJoinRoom = false;\n  _roomBaseInfo = {} as ZIMRoomInfo; // { roomID: '', roomName: '' }\n  _onUsersInRoomAttributesUpdatedCallbackMap: { [index: string]: (notifyData: {\n    infos: ZIMRoomMemberAttributesInfo[];\n    editor: string;\n  }) => void } = {};\n  constructor() {\n    if (!ZegoPluginUserInRoomAttributesCore.shared) {\n      ZegoPluginUserInRoomAttributesCore.shared = this;\n    }\n    return ZegoPluginUserInRoomAttributesCore.shared;\n  }\n  static getInstance() {\n    if (!ZegoPluginUserInRoomAttributesCore.shared) {\n      ZegoPluginUserInRoomAttributesCore.shared =\n        new ZegoPluginUserInRoomAttributesCore();\n    }\n    return ZegoPluginUserInRoomAttributesCore.shared;\n  }\n  // ------- internal events register ------\n  _registerEngineCallback() {\n    ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance().on(\n      'roomMemberAttributesUpdated',\n      (zim: any, { roomID, infos, operatedInfo }: ZIMEventOfRoomMembersAttributesUpdatedResult) => {\n        zloginfo(\n          `[ZegoPluginUserInRoomAttributesCore]NotifyUsersInRoomAttributesUpdated`,\n          infos,\n          operatedInfo\n        );\n        this._notifyUsersInRoomAttributesUpdated({\n          infos: infos.map((info) => info.attributesInfo),\n          editor: operatedInfo.userID,\n        });\n      }\n    );\n    zloginfo(\n      '[ZegoPluginUserInRoomAttributesCore]Register callback for ZIM...'\n    );\n  }\n  _unregisterEngineCallback() {\n    zloginfo(\n      '[ZegoPluginUserInRoomAttributesCore]Unregister callback from ZIM...'\n    );\n    ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance().off('roomMemberAttributesUpdated');\n  }\n  // ------- internal utils ------\n  _resetData() {\n    this._resetDataForLeaveRoom();\n  }\n  _resetDataForLeaveRoom() {\n    this._roomBaseInfo = {} as ZIMRoomInfo;\n    this._isJoinRoom = false;\n  }\n  // ------- internal events exec ------\n  _notifyUsersInRoomAttributesUpdated(notifyData: {\n    infos: ZIMRoomMemberAttributesInfo[];\n    editor: string;\n  }) {\n    Object.keys(this._onUsersInRoomAttributesUpdatedCallbackMap).forEach(\n      (callbackID) => {\n        if (this._onUsersInRoomAttributesUpdatedCallbackMap[callbackID]) {\n          this._onUsersInRoomAttributesUpdatedCallbackMap[callbackID](\n            notifyData\n          );\n        }\n      }\n    );\n  }\n  // ------- external method ------\n  joinRoom(roomID: string) {\n    if (!ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance()) {\n      zlogerror(\n        '[ZegoPluginUserInRoomAttributesCore]Please initialize it first.'\n      );\n      return Promise.reject();\n    }\n    return new Promise((resolve, reject) => {\n      if (!this._isJoinRoom) {\n        ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance()\n          .enterRoom({ roomID, roomName: roomID })\n          .then(({ roomInfo }: ZIMRoomEnteredResult) => {\n            zloginfo(\n              `[ZegoPluginUserInRoomAttributesCore]Join the room successfully.`\n            );\n            this._roomBaseInfo = roomInfo.baseInfo;\n            this._isJoinRoom = true;\n            resolve(new ZegoPluginResult('', ''));\n          })\n          .catch((error: ZIMError) => {\n            zlogerror(\n              `[ZegoPluginUserInRoomAttributesCore]Failed to join the room, code: ${error.code}, message: ${error.message}`\n            );\n            reject(error);\n          });\n      } else {\n        zloginfo('[ZegoPluginUserInRoomAttributesCore]Join room already success.');\n        resolve(new ZegoPluginResult('', ''));\n      }\n    });\n  }\n  leaveRoom() {\n    if (!ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance()) {\n      zlogerror(\n        '[ZegoPluginUserInRoomAttributesCore]Please initialize it first.'\n      );\n      return Promise.reject();\n    }\n    if (!this._roomBaseInfo.roomID) {\n      zlogerror(\n        '[ZegoPluginUserInRoomAttributesCore]Please join the room first.'\n      );\n      return Promise.reject();\n    }\n    return new Promise((resolve, reject) => {\n      ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance()\n        .leaveRoom(this._roomBaseInfo.roomID)\n        .then(() => {\n          zloginfo(\n            `[ZegoPluginUserInRoomAttributesCore]Leave the room successfully.`\n          );\n          this._resetDataForLeaveRoom();\n          resolve(new ZegoPluginResult('', ''));\n        })\n        .catch((error: ZIMError) => {\n          zlogerror(\n            `[ZegoPluginUserInRoomAttributesCore]Failed to leave the room, code: ${error.code}, message: ${error.message}`\n          );\n          reject(error);\n        });\n    });\n  }\n  getRoomBaseInfo() {\n    return this._roomBaseInfo;\n  }\n  setUsersInRoomAttributes(attributes: Record<string, string>, userIDs: string[]) {\n    if (!ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance()) {\n      zlogerror(\n        '[ZegoPluginUserInRoomAttributesCore]Please initialize it first.'\n      );\n      return Promise.reject();\n    }\n    return new Promise((resolve, reject) => {\n      ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance()\n        .setRoomMembersAttributes(\n          attributes,\n          userIDs,\n          this._roomBaseInfo.roomID,\n          { isDeleteAfterOwnerLeft: true }\n        )\n        .then(({ roomID, infos, errorUserList }: ZIMRoomMembersAttributesOperatedResult) => {\n          zloginfo(\n            `[ZegoPluginUserInRoomAttributesCore]Set attributes of users in room successfully.`\n          );\n          resolve({\n            ...new ZegoPluginResult('', ''),\n            errorUserList,\n            infos,\n          });\n        })\n        .catch((error: ZIMError) => {\n          zlogerror(\n            `[ZegoPluginUserInRoomAttributesCore]Failed to set the user's attributes, code: ${error.code}, message: ${error.message}`\n          );\n          reject(error);\n        });\n    });\n  }\n  queryUsersInRoomAttributes(config: ZIMRoomMemberAttributesQueryConfig) {\n    if (!ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance()) {\n      zlogerror(\n        '[ZegoPluginUserInRoomAttributesCore]Please initialize it first.'\n      );\n      return Promise.reject();\n    }\n    return new Promise((resolve, reject) => {\n      ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance()\n        .queryRoomMemberAttributesList(this._roomBaseInfo.roomID, config)\n        .then(({ roomID, infos, nextFlag: resNextFlag }: ZIMRoomMemberAttributesListQueriedResult) => {\n          zloginfo(\n            `[ZegoPluginUserInRoomAttributesCore]Query attributes of users in room successfully.`\n          );\n          const params = {\n            ...new ZegoPluginResult('', ''),\n            nextFlag: resNextFlag,\n            infos,\n          };\n          resolve(params);\n        })\n        .catch((error: ZIMError) => {\n          zlogerror(\n            `[ZegoPluginUserInRoomAttributesCore]Failed to query the user's attributes, code: ${error.code}, message: ${error.message}`\n          );\n          reject(error);\n        });\n    });\n  }\n  // ------- external events register ------\n  onUsersInRoomAttributesUpdated(callbackID: string, callback: (notifyData: {\n    infos: ZIMRoomMemberAttributesInfo[];\n    editor: string;\n  }) => void) {\n    if (!ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance()) {\n      zlogerror(\n        '[ZegoPluginUserInRoomAttributesCore]Please initialize it first.'\n      );\n    }\n    if (typeof callback !== 'function') {\n      if (callbackID in this._onUsersInRoomAttributesUpdatedCallbackMap) {\n        zloginfo(\n          '[Core][onUsersInRoomAttributesUpdated] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete this._onUsersInRoomAttributesUpdatedCallbackMap[callbackID];\n      }\n    } else {\n      this._onUsersInRoomAttributesUpdatedCallbackMap[callbackID] = callback;\n    }\n  }\n}\n"],"mappings":"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"}
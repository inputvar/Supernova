"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "ZegoUIKitPluginType", {
  enumerable: true,
  get: function () {
    return _defines.ZegoUIKitPluginType;
  }
});
exports.default = void 0;
var _logger = require("../../utils/logger");
var _defines = require("./defines");
const _plugins = new Map(); // type -> plugin
const ZegoUIKitCorePlugin = {
  installPlugins: plugins => {
    if (!plugins || !(plugins instanceof Array)) {
      (0, _logger.zlogerror)('[ZegoUIKitCorePlugin][installPlugins]The parameter passed in was incorrect');
      return;
    }
    plugins.forEach(plugin => {
      if (plugin.ZIMConnectionState) {
        if (_plugins.get('ZIM')) {
          (0, _logger.zloginfo)('[ZegoUIKitCorePlugin][installPlugins]Plugin already exists, this install does not take effect, plugin: ZIM');
        } else {
          _plugins.set('ZIM', plugin);
          (0, _logger.zloginfo)('[ZegoUIKitCorePlugin][installPlugins]Plugin install success, plugin: ZIM');
        }
      } else if (plugin.ZPNsPushSourceType) {
        if (_plugins.get('ZPNs')) {
          (0, _logger.zloginfo)('[ZegoUIKitCorePlugin][installPlugins]Plugin already exists, this install does not take effect, plugin: ZPNs');
        } else {
          _plugins.set('ZPNs', plugin);
          (0, _logger.zloginfo)('[ZegoUIKitCorePlugin][installPlugins]Plugin install success, plugin: ZPNs');
        }
      } else if (typeof plugin.getInstance === 'function') {
        // Compatible with the original usage
        const type = plugin.getInstance().getPluginType ? plugin.getInstance().getPluginType() : null;
        if (Object.values(_defines.ZegoUIKitPluginType).includes(type)) {
          if (_plugins.get(type)) {
            (0, _logger.zloginfo)('[ZegoUIKitCorePlugin][installPlugins]Plugin already exists, this install does not take effect, plugins: ', type);
          } else {
            _plugins.set(type, plugin);
            (0, _logger.zloginfo)('[ZegoUIKitCorePlugin][installPlugins]Plugin install success, plugin: ', type);
          }
        }
      }
    });
  },
  getZIMPlugin: () => {
    return _plugins.get('ZIM');
  },
  getZPNsPlugin: () => {
    return _plugins.get('ZPNs');
  },
  getPlugin: type => {
    if (type === _defines.ZegoUIKitPluginType.signaling) {
      (0, _logger.zloginfo)('[ZegoUIKitCorePlugin][getPlugin] type: ', type);
      return _plugins.get(type) || ZegoUIKitCorePlugin.getZIMPlugin();
    }
    return _plugins.get(type);
  }
};
var _default = exports.default = ZegoUIKitCorePlugin;
//# sourceMappingURL=ZegoUIKitCorePlugin.js.map
import type { CXAction } from 'zego-zpns-react-native';
export default class ZegoUIKitSignalingPlugin {
    static shared: ZegoUIKitSignalingPlugin;
    _signaling: number;
    constructor();
    static getInstance(): ZegoUIKitSignalingPlugin;
    static getVersion(): Promise<string>;
    getZIMInstance(): any;
    getPluginType(): number;
    setBackgroundMessageHandler(): void;
    setAndroidOfflineDataHandler(handler: (data: any) => void): void;
    setIOSOfflineDataHandler(handler: (data: any, uuid: string) => void): void;
    onCallKitAnswerCall(handler: (action: CXAction) => void): void;
    onCallKitEndCall(handler: (action: CXAction) => void): void;
    reportCallKitCallEnded(uuid: string, reason: number): void;
    queryCallList(count: number, nextFlag?: number): Promise<{
        callList: import("zego-zim-react-native").ZIMCallInfo[];
        nextFlag: number;
    }>;
    invoke(method: string, params?: any): any;
    registerPluginEventHandler(event: string, callbackID: string, callback: any): void;
}

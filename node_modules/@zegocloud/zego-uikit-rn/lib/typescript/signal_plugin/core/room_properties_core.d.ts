import type { ZIMMessage, ZIMRoomAttributesBatchOperationConfig, ZIMRoomAttributesDeleteConfig, ZIMRoomAttributesSetConfig, ZIMRoomAttributesUpdateInfo } from 'zego-zim-react-native';
export default class ZegoPluginRoomPropertiesCore {
    static shared: ZegoPluginRoomPropertiesCore;
    _onRoomPropertyUpdatedCallbackMap: {
        [index: string]: (notifyData: ZIMRoomAttributesUpdateInfo) => void;
    };
    _onInRoomTextMessageReceivedCallbackMap: {
        [index: string]: (notifyData: {
            messageList: ZIMMessage[];
            fromConversationID: string;
        }) => void;
    };
    constructor();
    static getInstance(): ZegoPluginRoomPropertiesCore;
    _registerEngineCallback(): void;
    _unregisterEngineCallback(): void;
    _notifyRoomPropertiesUpdated(notifyData: ZIMRoomAttributesUpdateInfo): void;
    _notifyInRoomTextMessageReceived(notifyData: {
        messageList: ZIMMessage[];
        fromConversationID: string;
    }): void;
    updateRoomProperty(attributes: Record<string, string>, config: ZIMRoomAttributesSetConfig): Promise<unknown>;
    deleteRoomProperties(keys: string[], config: ZIMRoomAttributesDeleteConfig): Promise<unknown>;
    beginRoomPropertiesBatchOperation(config: ZIMRoomAttributesBatchOperationConfig): Promise<never>;
    endRoomPropertiesBatchOperation(): Promise<unknown>;
    queryRoomProperties(): Promise<unknown>;
    onRoomPropertyUpdated(callbackID: string, callback: (notifyData: ZIMRoomAttributesUpdateInfo) => void): void;
    onInRoomTextMessageReceived(callbackID: string, callback: (notifyData: {
        messageList: ZIMMessage[];
        fromConversationID: string;
    }) => void): void;
}

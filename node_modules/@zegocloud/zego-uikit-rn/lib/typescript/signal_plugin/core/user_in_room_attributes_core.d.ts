import type { ZIMRoomInfo, ZIMRoomMemberAttributesInfo, ZIMRoomMemberAttributesQueryConfig } from 'zego-zim-react-native';
export default class ZegoPluginUserInRoomAttributesCore {
    static shared: ZegoPluginUserInRoomAttributesCore;
    _isJoinRoom: boolean;
    _roomBaseInfo: ZIMRoomInfo;
    _onUsersInRoomAttributesUpdatedCallbackMap: {
        [index: string]: (notifyData: {
            infos: ZIMRoomMemberAttributesInfo[];
            editor: string;
        }) => void;
    };
    constructor();
    static getInstance(): ZegoPluginUserInRoomAttributesCore;
    _registerEngineCallback(): void;
    _unregisterEngineCallback(): void;
    _resetData(): void;
    _resetDataForLeaveRoom(): void;
    _notifyUsersInRoomAttributesUpdated(notifyData: {
        infos: ZIMRoomMemberAttributesInfo[];
        editor: string;
    }): void;
    joinRoom(roomID: string): Promise<unknown>;
    leaveRoom(): Promise<unknown>;
    getRoomBaseInfo(): ZIMRoomInfo;
    setUsersInRoomAttributes(attributes: Record<string, string>, userIDs: string[]): Promise<unknown>;
    queryUsersInRoomAttributes(config: ZIMRoomMemberAttributesQueryConfig): Promise<unknown>;
    onUsersInRoomAttributesUpdated(callbackID: string, callback: (notifyData: {
        infos: ZIMRoomMemberAttributesInfo[];
        editor: string;
    }) => void): void;
}

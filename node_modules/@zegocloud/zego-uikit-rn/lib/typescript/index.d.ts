import { ZegoUIKitPluginType } from './components/internal/ZegoUIKitCorePlugin';
import { ZegoRoomPropertyUpdateType } from './components/internal/defines';
import ZegoAudioVideoView from './components/audio_video/ZegoAudioVideoView';
import ZegoCameraStateIcon from './components/audio_video/ZegoCameraStateIcon';
import ZegoMicrophoneStateIcon from './components/audio_video/ZegoMicrophoneStateIcon';
import ZegoSwitchCameraButton from './components/audio_video/ZegoSwitchCameraButton';
import ZegoToggleMicrophoneButton from './components/audio_video/ZegoToggleMicrophoneButton';
import ZegoToggleCameraButton from './components/audio_video/ZegoToggleCameraButton';
import ZegoSwitchAudioOutputButton from './components/audio_video/ZegoSwitchAudioOutputButton';
import ZegoAudioVideoContainer, { ZegoLayoutMode } from './components/audio_video_container/ZegoAudioVideoContainer';
import { ZegoViewPosition } from './components/audio_video_container/ZegoAudioVideoContainer/defines';
import ZegoLeaveButton from './components/audio_video/ZegoLeaveButton';
import ZegoInRoomMessageInput from './components/in_room_message/ZegoInRoomMessageInput';
import ZegoInRoomMessageView from './components/in_room_message/ZegoInRoomMessageView';
import ZegoMemberList from './components/in_room_member/ZegoMemberList';
import { ZegoAudioVideoResourceMode } from './components/internal/defines';
import { ZegoInvitationConnectionState, ZegoSendInvitationButton, ZegoCancelInvitationButton, ZegoAcceptInvitationButton, ZegoRefuseInvitationButton } from './plugins/invitation';
declare const _default: {
    init: (appID: number, appSign: string, userInfo: any) => Promise<void>;
    uninit: () => Promise<void>;
    useFrontFacingCamera: (isFrontFacing: boolean) => Promise<void>;
    isMicrophoneOn: (userID: string) => any;
    isCameraOn: (userID: string) => any;
    setAudioOutputToSpeaker: (isSpeaker: boolean) => void;
    turnMicrophoneOn: (userID: string, on: boolean) => Promise<void>;
    turnCameraOn: (userID: string, on: boolean) => Promise<void>;
    onMicrophoneOn: (callbackID: string, callback?: Function) => void;
    onCameraOn: (callbackID: string, callback?: Function) => void;
    onAudioOutputDeviceChanged: (callbackID: string, callback?: Function) => void;
    onSoundLevelUpdated: (callbackID: string, callback?: Function) => void;
    joinRoom: (roomID: string, token: string, markAsLargeRoom?: boolean) => Promise<void>;
    leaveRoom: () => Promise<void>;
    isRoomConnected: () => boolean;
    onOnlySelfInRoom: (callbackID: string, callback?: Function) => void;
    onRoomStateChanged: (callbackID: string, callback?: Function) => void;
    onRequireNewToken: (callbackID: string, callback?: Function) => void;
    connectUser: (userID: string, userName: string) => void;
    disconnectUser: () => void;
    getUser: (userID: string) => any;
    getAllUsers: () => any[];
    getLocalUserInfo: () => any;
    onUserJoin: (callbackID: string, callback?: Function) => void;
    onUserLeave: (callbackID: string, callback?: Function) => void;
    onUserInfoUpdate: (callbackID: string, callback?: Function) => void;
    onAudioVideoAvailable: (callbackID: string, callback?: Function) => void;
    onAudioVideoUnavailable: (callbackID: string, callback?: Function) => void;
    getInRoomMessages: () => any[];
    sendInRoomMessage: (message: string) => Promise<unknown>;
    onInRoomMessageReceived: (callbackID: string, callback?: Function) => void;
    onInRoomMessageSent: (callbackID: string, callback?: Function) => void;
    onUserCountOrPropertyChanged: (callbackID: string, callback?: Function) => void;
    setAudioVideoResourceMode: (audioVideoResourceMode: any) => void;
    setRoomProperty: (key: string, value: any) => Promise<void>;
    updateRoomProperties: (newRoomProperties: any) => Promise<void>;
    getRoomProperties: () => any;
    onRoomPropertyUpdated: (callbackID: string, callback?: Function) => void;
    onRoomPropertiesFullUpdated: (callbackID: string, callback?: Function) => void;
    forceSortMemberList: () => void;
    forceSortAudioVideoList: () => void;
    forceRenderVideoView: () => void;
    startPlayingAllAudioVideo: () => void;
    stopPlayingAllAudioVideo: () => void;
    removeUserFromRoom: (userIDs?: string[]) => Promise<void>;
    sendInRoomCommand: (command: string, toUserIDs?: string[]) => Promise<void>;
    onInRoomCommandReceived: (callbackID: string, callback?: Function) => void;
    onMeRemovedFromRoom: (callbackID: string, callback?: Function) => void;
    onTurnOnYourCameraRequest: (callbackID: string, callback?: Function) => void;
    onTurnOnYourMicrophoneRequest: (callbackID: string, callback?: Function) => void;
    installPlugins: (plugins: any[]) => void;
    getPlugin: (type: number) => any;
    onError: (callbackID: string, callback?: Function) => void;
    getSignalingPlugin: () => {
        getZegoUIKitSignalingPlugin: () => typeof import("./signal_plugin").default;
        getVersion: () => void;
        init: (appID: number, appSign: string) => void;
        uninit: () => void;
        login: (userID: string, userName: string) => any;
        logout: () => any;
        enableNotifyWhenAppRunningInBackgroundOrQuit: (enable: boolean, isIOSDevelopmentEnvironment?: boolean, appName?: string) => any;
        sendInvitation: (invitees: any[], timeout: number, type: number, data?: string, notificationConfig?: any) => any;
        cancelInvitation: (invitees: any[], data?: string) => any;
        reportZPNsCallKitCallEnded: (uuid: string, reason: number) => any;
        refuseInvitation: (inviterID: string, data?: string) => any;
        acceptInvitation: (inviterID: string, data?: string) => any;
        queryCallList: (count: number, nextFlag?: number) => any;
        onConnectionStateChanged: (callbackID: string, callback?: Function) => void;
        onInvitationReceived: (callbackID: string, callback?: Function) => void;
        onInvitationTimeout: (callbackID: string, callback?: Function) => void;
        onInvitationResponseTimeout: (callbackID: string, callback?: Function) => void;
        onInvitationAccepted: (callbackID: string, callback?: Function) => void;
        onInvitationRefused: (callbackID: string, callback?: Function) => void;
        onInvitationCanceled: (callbackID: string, callback?: Function) => void;
        joinRoom(roomID: string): Promise<unknown>;
        setUsersInRoomAttributes: (key: string, value: any, userIDs: string[]) => Promise<unknown>;
        queryUsersInRoomAttributes: (nextFlag: string, count?: number) => Promise<unknown>;
        onUsersInRoomAttributesUpdated: (callbackID: string, callback?: Function) => void;
        updateRoomProperty(key: string, value: any, isDeleteAfterOwnerLeft: boolean, isForce: boolean, isUpdateOwner: boolean): Promise<unknown>;
        deleteRoomProperties(keys: string[], isForce: boolean): Promise<unknown>;
        beginRoomPropertiesBatchOperation(isDeleteAfterOwnerLeft: boolean, isForce: boolean, isUpdateOwner: boolean): void;
        endRoomPropertiesBatchOperation(): Promise<unknown>;
        queryRoomProperties(): Promise<unknown>;
        onRoomPropertyUpdated(callbackID: string, callback?: Function): void;
        onRoomPropertiesFullUpdated(callbackID: string, callback?: Function): void;
        onInRoomTextMessageReceived(callbackID: string, callback?: Function): void;
    };
};
export default _default;
export { ZegoAudioVideoView, ZegoCameraStateIcon, ZegoMicrophoneStateIcon, ZegoSwitchCameraButton, ZegoToggleMicrophoneButton, ZegoToggleCameraButton, ZegoSwitchAudioOutputButton, ZegoAudioVideoContainer, ZegoLayoutMode, ZegoViewPosition, ZegoLeaveButton, ZegoInRoomMessageInput, ZegoInRoomMessageView, ZegoMemberList, ZegoSendInvitationButton, ZegoCancelInvitationButton, ZegoAcceptInvitationButton, ZegoRefuseInvitationButton, ZegoRoomPropertyUpdateType, ZegoUIKitPluginType, ZegoInvitationConnectionState, ZegoAudioVideoResourceMode, };
